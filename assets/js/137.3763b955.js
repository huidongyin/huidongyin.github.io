(window.webpackJsonp=window.webpackJsonp||[]).push([[137],{479:function(e,t,s){"use strict";s.r(t);var a=s(4),o=Object(a.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("p",[e._v("位点提交的内容最终会保存到Kafka的内部主题 "),t("code",[e._v("__consumer_offsets")]),e._v(" 中,对于主题"),t("code",[e._v("__consumer_offsets")]),e._v("的深度掌握也可以让我们更好地理解和使用好位点提交。")]),e._v(" "),t("p",[e._v("一般情况下,当集群中第一次有消费者消费消息时会自动创建主题 "),t("code",[e._v("__consumer_offsets")]),e._v(",不过它的副本因子还受 "),t("code",[e._v("offsets.topic.replication.factor")]),e._v("参数的约束,这个参数的默认值为3(下载安装的包中此值可能为1),分区数可以通过 "),t("code",[e._v("offsets.topic.num.partitions")]),e._v("参数设置,默认为50。客户端提交消费位点是使用 "),t("strong",[e._v("OffsetCommitRequest")]),e._v(" 请求实现的, "),t("strong",[e._v("OffsetCommitRequest")]),e._v("的结构如图所示。")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://raw.githubusercontent.com/huidongyin/DrawingBed/main/kafka/202311270025156.png",alt:""}})]),e._v(" "),t("p",[t("strong",[e._v("OffsetCommitRequest")]),e._v("的结构请求体第一层中的 "),t("code",[e._v("group_id、 generation_id和 member_id")]),e._v("在前面的内容中已经介绍过多次了, "),t("code",[e._v("retention_time")]),e._v(" 表示当前提交的消费位点所能保留的时长,不过对于消费者而言这个值保持为-1。也就是说,按照 broker 端的配置 "),t("code",[e._v("offsets.retention.minutes")]),e._v(" 来确定保留时长。"),t("code",[e._v("offsets.retention.minutes")]),e._v(" 的默认值为10080,即7天,超过这个时间后消费位点的信息就会被删除(使用墓碑消息和日志压缩策略)。")]),e._v(" "),t("blockquote",[t("p",[e._v("这个参数在"),t("code",[e._v("2.0.0")]),e._v("版本之前的默认值为1440,即1天,很多关于消费位点的异常也是由这个参数的值配置不当造成的。有些定时消费的任务在执行完某次消费任务之后保存了消费位点,之后隔了一段时间再次执行消费任务,如果这个间隔时间超过 "),t("code",[e._v("offsets.retention.minutes")]),e._v(" 的配置值,那么原先的位点信息就会丢失,最后只能根据客户端参数"),t("code",[e._v("auto.offset.reset")]),e._v("来决定开始消费的位置,遇到这种情况时就需要根据实际情况来调配 "),t("code",[e._v("offsets.retention.minutes")]),e._v(" 参数的值。")])]),e._v(" "),t("p",[t("strong",[e._v("OffsetCommitRequest")]),e._v("中的其余字段大抵也是按照分区的粒度来划分消费位点的: "),t("code",[e._v("topic")]),e._v("表示主题名称, "),t("code",[e._v("partition")]),e._v("表示分区编号等。注意这里还有一个 "),t("code",[e._v("metadata")]),e._v(" 字段, "),t("strong",[e._v("OffsetAndMetadata")]),e._v("中包含2个成员变量("),t("code",[e._v("offset和metadata")]),e._v("),与此对应的有两个构造方法,详细如下：")]),e._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("public")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("OffsetAndMetadata")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("long")]),e._v(" offset"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("public")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("OffsetAndMetadata")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("long")]),e._v(" offset"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("String")]),e._v(" metadata"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br")])]),t("p",[t("code",[e._v("metadata")]),e._v("是自定义的元数据信息,如果不指定这个参数,那么就会被设置为空字符串,注意"),t("code",[e._v("metadata")]),e._v("的长度不能超过"),t("code",[e._v("offset.metadata.max.bytes")]),e._v("参数(broker端配置,默认值为4096)所配置的大小。")]),e._v(" "),t("p",[e._v("同消费组的元数据信息一样,最终提交的消费位点也会以消息的形式发送至主题"),t("code",[e._v("__consumer_offsets")]),e._v(",与消费位点对应的消息也只定义了key和value字段的具体内容,它不依赖于具体版本的消息格式,以此做到与具体的消息格式无关。")]),e._v(" "),t("p",[e._v("下图中展示了消费位点对应的消息内容格式,上面是消息的key,下面是消息的 value可以看到key和vale中都包含了 "),t("code",[e._v("version")]),e._v(" 字段,这个用来标识具体的key和value的版本信息,不同的版本对应的内容格式可能并不相同。就目前版本而言,key和value的 "),t("code",[e._v("version")]),e._v(" 值都为1。key中除了"),t("code",[e._v("version")]),e._v("字段还有 "),t("code",[e._v("group、 topic、 partition")]),e._v("字段,分别表示消费组的 "),t("code",[e._v("groupId")]),e._v("、主题名称和分区编号。虽然key中包含了4个字段,但最终确定这条消息所要存储的分区还是根据单独的 "),t("code",[e._v("group")]),e._v(" 字段来计算的,这样就可以保证消费位点信息与消费组对应的"),t("strong",[e._v("GroupCoordinator")]),e._v("处于同一个 broker 节点上,省去了中间轮转的开销,这一点与消费组的元数据信息的存储是一样的。 value中包含了5个字段,除 "),t("code",[e._v("version")]),e._v(" 字段外,其余的 "),t("code",[e._v("offset、 metadata、 commit_timestamp、 expire_timestamp")]),e._v(" 字段分别表示消费位点、自定义的元数据信息、位点提交到Kafka的时间戳、消费位点被判定为超时的时间戳。其中。 "),t("code",[e._v("offset和 metadata")]),e._v("与"),t("strong",[e._v("OffsetCommitRequest")]),e._v("请求体中的 "),t("code",[e._v("offset 和 metadata")]),e._v(" 对应,而 "),t("code",[e._v("expire_timestamp")]),e._v(" 和"),t("strong",[e._v("OffsetCommitRequest")]),e._v("请求体中的 "),t("code",[e._v("retention_time")]),e._v(" 也有关联, "),t("code",[e._v("commit_timestamp")]),e._v(" 值与 "),t("code",[e._v("offsets.retention.minutes")]),e._v(" 参数值之和即为 "),t("code",[e._v("expire_timestamp")]),e._v("(默认情况下)。")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://raw.githubusercontent.com/huidongyin/DrawingBed/main/kafka/202311270025488.png",alt:""}})]),e._v(" "),t("p",[e._v("在处理完消费位点之后,Kafka返回 "),t("strong",[e._v("OffsetCommitResponse")]),e._v("给客户端, "),t("strong",[e._v("OffsetCommitResponse")]),e._v("的结构如图所示。")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://raw.githubusercontent.com/huidongyin/DrawingBed/main/kafka/202311270025751.png",alt:""}})]),e._v(" "),t("p",[e._v("我们可以通过 "),t("code",[e._v("kafka-console-consumer.sh")]),e._v(" 脚本来查看 "),t("code",[e._v("__consumer_offsets")]),e._v(" 中的内容,不过要设定 "),t("code",[e._v("formatter")]),e._v(" 参数为 "),t("code",[e._v("kafka.coordinator.group.GroupMetadataManager$OffsetsMessageFormatter")]),e._v("。")]),e._v(" "),t("p",[e._v("假设我们要査看消费组"),t("code",[e._v("consumerGroupId")]),e._v("的位点提交信息,首先可以计算出分区编号为20,然后查看这个分区中的消息,相关示例如下:")]),e._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[e._v("./kafka-console-consumer.sh --bootstrap-server kafka-zookeeper:2181/kafka "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("--topic")]),e._v(" __consumer_offsets "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("--partition")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("20")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("--formatter")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("'kafka.coordinator.group.GroupMetadataManager$OffsetsMessageFormatter'")]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[e._v("一般情况下,使用 "),t("strong",[e._v("OffsetsMessageFormatter")]),e._v(" 打印的格式可以概括为：")]),e._v(" "),t("div",{staticClass:"language-text line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('"[%s,%s,%d]::[OffsetMetadata[%d,%s],CommitTime %d,ExpirationTime %d]".format(group,topic,partition,offset,metadata,commitTimestamp,expireTimestamp)\n')])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[e._v("这里面几个字段的含义可以参照【消费位点对应的内容格式图】来理解。这里需要说明的是,如果某个key("),t("code",[e._v("version+ group+ topic+ partition")]),e._v("的组合)对应的消费位点过期了,那么对应的value就会被设置为null也就是墓碑消息(主题 "),t("code",[e._v("__consumer_offsets")]),e._v(" 使用的是日志压缩策略),对应的打印结果也会变成如下的形式：")]),e._v(" "),t("div",{staticClass:"language-text line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('"[%s,%s,%d]::null".format(group,topic,partition)\n')])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[e._v("有时候在查看主题 "),t("code",[e._v("__consumer_offsets")]),e._v(" 中的内容时有可能出现下面这种情况:")]),e._v(" "),t("div",{staticClass:"language-text line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("[consumerGroupId,topic-offsets,21]::null\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[e._v("这说明对应的消费位点已经过期了。在Kafka中有一个名为"),t("code",[e._v("delete-expired-group-metadata")]),e._v("的定时任务来负责清理过期的消费位点,这个定时任务的执行周期由参数 "),t("code",[e._v("offsets.retention.check.interval.ms")]),e._v(" 控制,默认值为60000即10分钟。")]),e._v(" "),t("p",[e._v("还有 "),t("code",[e._v("metadata")]),e._v(",一般情况下它的值要么为null要么为空字符串,出现这种情况时"),t("strong",[e._v("OffsetsMessageFormatter")]),e._v("会把它展示为"),t("code",[e._v("NO_METADATA")]),e._v(",否则就按实际值进行展示。")]),e._v(" "),t("blockquote",[t("p",[e._v("如果有若干消费者消费了某个主题中的消息,并且也提交了相应的消费位点,那么在删除这个主题之后会一并将这些消费位点信息删除。")])]),e._v(" "),t("hr")])}),[],!1,null,null,null);t.default=o.exports}}]);