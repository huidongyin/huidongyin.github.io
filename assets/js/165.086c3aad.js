(window.webpackJsonp=window.webpackJsonp||[]).push([[165],{546:function(_,v,a){"use strict";a.r(v);var t=a(4),r=Object(t.a)({},(function(){var _=this,v=_._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[v("h2",{attrs:{id:"_1-到底在消费者创建还是在生产者创建"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-到底在消费者创建还是在生产者创建"}},[_._v("#")]),_._v(" 1.到底在消费者创建还是在生产者创建？")]),_._v(" "),v("p",[_._v("如果A项目和B项目有相互发送和接收消息，应该创建几个vhost，几个Exchange？")]),_._v(" "),v("p",[_._v("交换机和队列，实际上是作为资源，由运维管理员创建的。")]),_._v(" "),v("hr"),_._v(" "),v("h2",{attrs:{id:"_2-信息落库-定时任务"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-信息落库-定时任务"}},[_._v("#")]),_._v(" 2.信息落库+ 定时任务")]),_._v(" "),v("p",[_._v("将需要发送的消息保存在数据库中，可以实现消息的可追溯和重复控制，需要配合定时任务来实现。")]),_._v(" "),v("ol",[v("li",[v("p",[_._v("将需要发送的消息登记在消息表中。")])]),_._v(" "),v("li",[v("p",[_._v("定时任务一分钟或半分钟扫描一次，将未发送的消息发送到 MQ 服务器，并且修改状态为已发送。")])]),_._v(" "),v("li",[v("p",[_._v("如果需要重发消息，将指定消息的状态修改为未发送即可。")])])]),_._v(" "),v("p",[_._v("副作用：降低效率，浪费存储空间。")]),_._v(" "),v("hr"),_._v(" "),v("h2",{attrs:{id:"_3-日志追踪"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-日志追踪"}},[_._v("#")]),_._v(" 3.日志追踪")]),_._v(" "),v("p",[_._v("RabbitMQ 可以通过 Firehose 功能来记录消息流入流出的情况，用于调试，排错。")]),_._v(" "),v("p",[_._v("它是通过创建一个 TOPIC 类型的交换机（amq.rabbitmq.trace），把生产者发送给Broker 的消息或者 Broker 发送给消费者的消息发到这个默认的交换机上面来实现的。")]),_._v(" "),v("p",[_._v("另外 RabbitMQ 也提供了一个 Firehose 的 GUI 版本，就是 Tracing 插件。")]),_._v(" "),v("p",[_._v("启用 Tracing 插件后管理界面右侧选项卡会多一个 Tracing，可以添加相应的策略。")]),_._v(" "),v("p",[_._v("RabbitMQ 还提供了其他的插件来增强功能。")]),_._v(" "),v("hr"),_._v(" "),v("h2",{attrs:{id:"_4-如何减少连接数"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_4-如何减少连接数"}},[_._v("#")]),_._v(" 4.如何减少连接数")]),_._v(" "),v("p",[_._v("在发送大批量消息的情况下，创建和释放连接依然有不小的开销。我们可以跟接收方约定批量消息的格式，比如支持 JSON 数组的格式，通过合并消息内容，可以减少生产者/消费者与 Broker 的连接。")]),_._v(" "),v("p",[_._v("比如：活动过后，要全范围下线产品，通过 Excel 导入模板，通常有几万到几十万条解绑数据，合并发送的效率更高。")]),_._v(" "),v("p",[_._v("建议单条消息不要超过 4M（4096KB），一次发送的消息数需要合理地控制。")]),_._v(" "),v("hr"),_._v(" "),v("h2",{attrs:{id:"_5-无法被路由的消息-去了哪里"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_5-无法被路由的消息-去了哪里"}},[_._v("#")]),_._v(" 5.无法被路由的消息，去了哪里？")]),_._v(" "),v("p",[_._v("直接丢弃。可用备份交换机（alternate-exchange）接收。")]),_._v(" "),v("hr"),_._v(" "),v("h2",{attrs:{id:"_6-大量消息堆积怎么办"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_6-大量消息堆积怎么办"}},[_._v("#")]),_._v(" 6.大量消息堆积怎么办？")]),_._v(" "),v("ol",[v("li",[v("p",[_._v("重启（不是开玩笑的）")])]),_._v(" "),v("li",[v("p",[_._v("多创建几个消费者同时消费")])]),_._v(" "),v("li",[v("p",[_._v("直接清空队列，重发消息")])])]),_._v(" "),v("hr"),_._v(" "),v("h2",{attrs:{id:"_7-设计一个-mq-你的思路是什么"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_7-设计一个-mq-你的思路是什么"}},[_._v("#")]),_._v(" 7.设计一个 MQ，你的思路是什么？")]),_._v(" "),v("p",[_._v("存储与转发。")]),_._v(" "),v("p",[_._v("存储：内存：用什么数据结构？")]),_._v(" "),v("p",[_._v("磁盘：文件系统？数据库？")]),_._v(" "),v("p",[_._v("通信：通信协议（TCP HTTP AMQP ）？一对一？一对多？一对多")]),_._v(" "),v("p",[_._v("推模式？拉模式？后者")]),_._v(" "),v("p",[_._v("其他特性……")]),_._v(" "),v("hr")])}),[],!1,null,null,null);v.default=r.exports}}]);