(window.webpackJsonp=window.webpackJsonp||[]).push([[151],{532:function(e,v,_){"use strict";_.r(v);var o=_(4),r=Object(o.a)({},(function(){var e=this,v=e._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[v("p",[v("code",[e._v("RocketMQ")]),e._v("是阿里巴巴开源的一款高性能高吞吐量的分布式消息中间件。")]),e._v(" "),v("ul",[v("li",[e._v("支持"),v("code",[e._v("broker")]),e._v("和"),v("code",[e._v("consumer")]),e._v("端消息过滤")]),e._v(" "),v("li",[e._v("支持发布订阅模型和点对点")]),e._v(" "),v("li",[e._v("支持推和拉两种消息模式")]),e._v(" "),v("li",[e._v("单一队列百万消息，亿级消息堆积")]),e._v(" "),v("li",[e._v("支持单"),v("code",[e._v("master")]),e._v("节点，多"),v("code",[e._v("master")]),e._v("节点，多"),v("code",[e._v("master")]),e._v("多"),v("code",[e._v("slave")]),e._v("节点")]),e._v(" "),v("li",[e._v("任意一点都是高可用，水平扩展，"),v("code",[e._v("Producer")]),e._v("，"),v("code",[e._v("Consumer")]),e._v("，队列都可以分布式")]),e._v(" "),v("li",[e._v("消息失败重试机制，支持特定"),v("code",[e._v("level")]),e._v("的定时消息")]),e._v(" "),v("li",[e._v("底层采用"),v("code",[e._v("Netty")])]),e._v(" "),v("li",[v("code",[e._v("4.3.X")]),e._v("开始支持分布式事务")]),e._v(" "),v("li",[e._v("适合金融类业务，高可用性跟踪和审计功能")])]),e._v(" "),v("hr"),e._v(" "),v("p",[v("code",[e._v("RocketMQ")]),e._v("的一些基本概念：")]),e._v(" "),v("ul",[v("li",[v("code",[e._v("Producer")]),e._v("：消息生产者")]),e._v(" "),v("li",[v("code",[e._v("Producer Group")]),e._v("：消息生产组，发送同类消息的一个消息生产组")]),e._v(" "),v("li",[v("code",[e._v("Consumer")]),e._v("：消费者")]),e._v(" "),v("li",[v("code",[e._v("Consumer Group")]),e._v("：消费同类消息的多个实例")]),e._v(" "),v("li",[v("code",[e._v("Tag")]),e._v("：标签，子主题（二级分类）对"),v("code",[e._v("Topic")]),e._v("的进一步细化，用于区分一个"),v("code",[e._v("Topic")]),e._v("下不同业务的消息")]),e._v(" "),v("li",[v("code",[e._v("Topic")]),e._v("主题：如订单类消息，"),v("code",[e._v("queue")]),e._v("是消息的物理管理单位，而"),v("code",[e._v("Topic")]),e._v("是逻辑管理单位，一个"),v("code",[e._v("topic")]),e._v("下可以有多个队列，默认自动创建是4个，手动创建是8个")]),e._v(" "),v("li",[v("code",[e._v("Message")]),e._v("：消息，每一个"),v("code",[e._v("message")]),e._v("必须指定一个"),v("code",[e._v("topic")])]),e._v(" "),v("li",[v("code",[e._v("Broker")]),e._v("："),v("code",[e._v("MQ")]),e._v("程序，接收生产的消息，提供给消费者消费的程序")]),e._v(" "),v("li",[v("code",[e._v("Name Server")]),e._v("：给生产者和消费者提供路由信息，提供轻量级服务发现，路由，元数据信息，可以多个部署，互相独立")]),e._v(" "),v("li",[v("code",[e._v("Offset")]),e._v("：偏移量，可以理解为消息进度")]),e._v(" "),v("li",[v("code",[e._v("commit log")]),e._v("：消息存储会写在"),v("code",[e._v("commit log")]),e._v(" 文件")])]),e._v(" "),v("hr"),e._v(" "),v("blockquote",[v("p",[v("code",[e._v("RocketMQ")]),e._v("官网地址："),v("code",[e._v("[https://rocketmq.apache.org/](https://rocketmq.apache.org/)")])])]),e._v(" "),v("hr"),e._v(" "),v("h2",{attrs:{id:"_1-使用docker安装rocketmq"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-使用docker安装rocketmq"}},[e._v("#")]),e._v(" 1.使用docker安装rocketMQ")]),e._v(" "),v("div",{staticClass:"language-text line-numbers-mode"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[e._v('#创建RocketMQ使用的共有网络，便于相互访问\ndocker network create rocketmq_network\n \n#foxiswho/rocketmq 4.7.0以后不再分别创建broker及nameserver的镜像，统一使用rocketmq镜像，只是在启动命令上区分\ndocker pull foxiswho/rocketmq:4.8.0\n#rocketmq控制台2.0.0版本，源码来自于官方仓库https://github.com/apache/rocketmq-externals#rocketmq-console\ndocker pull 56553655/rocketmq-console-ng:2.0.0\n \n#启动rocketmq nameserver\ndocker run -d --network rocketmq_network --network-alias rmqnamesrv --name rmqnamesrv -e "JAVA_OPT_EXT=-Xms512M -Xmx512M -Xmn128m" -p 9876:9876 foxiswho/rocketmq:4.8.0 sh mqnamesrv\n \n#启动rocketmq broker\ndocker run -d --network rocketmq_network --network-alias rmqbroker --name rmqbroker -e "NAMESRV_ADDR=rmqnamesrv:9876" -e "JAVA_OPT_EXT=-Xms512M -Xmx512M -Xmn128m" -p 10911:10911 -p 10912:10912 -p 10909:10909 foxiswho/rocketmq:4.8.0 sh mqbroker\n \n#启动rocketmq-console-ng\ndocker run -d --network rocketmq_network --network-alias rocketmq-console-ng -p 8080:8080 --name rocketmq-console-ng 56553655/rocketmq-console-ng:2.0.0\n\n# 访问localhost:8080 成功出现控制台 over！\n')])]),e._v(" "),v("div",{staticClass:"line-numbers-wrapper"},[v("span",{staticClass:"line-number"},[e._v("1")]),v("br"),v("span",{staticClass:"line-number"},[e._v("2")]),v("br"),v("span",{staticClass:"line-number"},[e._v("3")]),v("br"),v("span",{staticClass:"line-number"},[e._v("4")]),v("br"),v("span",{staticClass:"line-number"},[e._v("5")]),v("br"),v("span",{staticClass:"line-number"},[e._v("6")]),v("br"),v("span",{staticClass:"line-number"},[e._v("7")]),v("br"),v("span",{staticClass:"line-number"},[e._v("8")]),v("br"),v("span",{staticClass:"line-number"},[e._v("9")]),v("br"),v("span",{staticClass:"line-number"},[e._v("10")]),v("br"),v("span",{staticClass:"line-number"},[e._v("11")]),v("br"),v("span",{staticClass:"line-number"},[e._v("12")]),v("br"),v("span",{staticClass:"line-number"},[e._v("13")]),v("br"),v("span",{staticClass:"line-number"},[e._v("14")]),v("br"),v("span",{staticClass:"line-number"},[e._v("15")]),v("br"),v("span",{staticClass:"line-number"},[e._v("16")]),v("br"),v("span",{staticClass:"line-number"},[e._v("17")]),v("br"),v("span",{staticClass:"line-number"},[e._v("18")]),v("br")])]),v("hr"),e._v(" "),v("h2",{attrs:{id:"_2-控制台介绍"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-控制台介绍"}},[e._v("#")]),e._v(" 2.控制台介绍")]),e._v(" "),v("p",[e._v("默认情况下， "),v("code",[e._v("nameserver")]),e._v(" 监听的是 "),v("code",[e._v("9876")]),e._v("端口，"),v("code",[e._v("broker")]),e._v(" 监听的是"),v("code",[e._v("10911")]),e._v(" 端口。 官方提供了一个RocketMQ的可视化控制台。这个是"),v("code",[e._v("rocketmq")]),e._v("的扩展，里面不仅包含控制台的扩展，也包含对大数据"),v("code",[e._v("flume")]),e._v("、"),v("code",[e._v("hbase")]),e._v("等组件的对接和扩展。下载完成后，导入 "),v("code",[e._v("idea")]),e._v(" ，修改配置文件， "),v("code",[e._v("application.properties")]),e._v(" ,配置 "),v("code",[e._v("namesrvAddr")]),e._v(" 地址，指向目标服务的"),v("code",[e._v("ip")]),e._v("和端口。")]),e._v(" "),v("p",[v("strong",[e._v("通过控制台创建消息")]),e._v("，要能够发送和接收消息，需要先创建"),v("code",[e._v("Topic")]),e._v("，这里的"),v("code",[e._v("Topic")]),e._v("和"),v("code",[e._v("kafka")]),e._v("的"),v("code",[e._v("topic")]),e._v("的概念是一样的，进入到控制台，选择"),v("code",[e._v("topic")]),e._v("。\n"),v("img",{attrs:{src:"https://raw.githubusercontent.com/huidongyin/DrawingBed/main/RocketMQ/202311052139697.png",alt:"image.png"}}),e._v(" "),v("code",[e._v("readQueueNums")]),e._v(" 和 "),v("code",[e._v("writeQueueNums")]),e._v(" 分别表示读队列数和写队列数\n"),v("code",[e._v("writeQueueNums")]),e._v(" 表示 "),v("code",[e._v("producer")]),e._v(" 发送到的 "),v("code",[e._v("MessageQueue")]),e._v(" 的队列个数\n"),v("code",[e._v("readQueueNumbs")]),e._v(" 表示 "),v("code",[e._v("Consumer")]),e._v(" 读取消息的 "),v("code",[e._v("MessageQueue")]),e._v(" 队列个数，其实类似于 "),v("code",[e._v("kafka")]),e._v(" 的分区的概念\n这两个值需要相等，在集群模式下如果不相等，假如说 "),v("code",[e._v("writeQueueNums=6")]),e._v(" , "),v("code",[e._v("readQueueNums=3")]),e._v(" , 那么每个 "),v("code",[e._v("broker")]),e._v(" 上会有3个 "),v("code",[e._v("queue")]),e._v(" 的消息是无法消费的。")]),e._v(" "),v("hr")])}),[],!1,null,null,null);v.default=r.exports}}]);