(window.webpackJsonp=window.webpackJsonp||[]).push([[138],{480:function(t,s,a){"use strict";a.r(s);var n=a(4),r=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"_1-消息传输保障"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-消息传输保障"}},[t._v("#")]),t._v(" 1.消息传输保障")]),t._v(" "),s("p",[t._v("一般而言,消息中间件的消息传输保障有3个层级,分别如下。")]),t._v(" "),s("ol",[s("li",[s("code",[t._v("at most once")]),t._v(":至多一次。消息可能会丢失,但绝对不会重复传输。")]),t._v(" "),s("li",[s("code",[t._v("at least once")]),t._v(":最少一次。消息绝不会丢失,但可能会重复传输。")]),t._v(" "),s("li",[s("code",[t._v("exactly once")]),t._v(":恰好一次。每条消息肯定会被传输一次且仅传输一次。")])]),t._v(" "),s("p",[t._v("Kafka的消息传输保障机制非常直观。当生产者向 Kafka 发送消息时,一旦消息被成功提交到日志文件,由于多副本机制的存在,这条消息就不会丢失。如果生产者发送消息到 Kafka 之后,遇到了网络问题而造成通信中断,那么生产者就无法判断该消息是否已经提交。虽然Kafka无法确定网络故障期间发生了什么,但生产者可以进行多次重试来确保消息已经写入Kafka,这个重试的过程中有可能会造成消息的重复写入,所以这里Kafka提供的消息传输保障为"),s("code",[t._v("at least once")]),t._v("。")]),t._v(" "),s("p",[t._v("对消费者而言,消费者处理消息和提交消费位点的顺序在很大程度上决定了消费者提供哪种消息传输保障。如果消费者在拉取完消息之后,应用逻辑先处理消息后提交消费位点,那么在消息处理之后且在位点提交之前消费者宕机了,待它重新上线之后,会从上一次位点提交的位置拉取,这样就出现了重复消费,因为有部分消息已经处理过了只是还没来得及提交消费位点,此时就对应 "),s("code",[t._v("at least once")]),t._v("。如果消费者在拉完消息之后,应用逻辑先提交消费位点后进行消息处理,那么在位点提交之后且在消息处理完成之前消费者宕机了,待它重新上线之后,会从已经提交的位点处开始重新消费,但之前尚有部分消息未进行消费,如此就会发生消息丢失,此时就对应 "),s("code",[t._v("at most once")]),t._v("。")]),t._v(" "),s("p",[t._v("Kafka从"),s("code",[t._v("0.11.0.0")]),t._v("版本开始引入了幂等和事务这两个特性,以此来实现"),s("strong",[t._v("EOS")]),t._v("(exactly once semantics,精确一次处理语义)。")]),t._v(" "),s("hr"),t._v(" "),s("h2",{attrs:{id:"_2-幂等"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-幂等"}},[t._v("#")]),t._v(" 2.幂等")]),t._v(" "),s("p",[t._v("所谓的幂等,简单地说就是对接口的多次调用所产生的结果和调用一次是一致的。生产者在进行重试的时候有可能会重复写入消息,而使用Kafka的幂等性功能之后就可以避免这种情况开启幂等性功能的方式很简单,只需要显式地将生产者客户端参数"),s("code",[t._v("enable.idempotence")]),t._v("设置为"),s("code",[t._v("true")]),t._v("即可(这个参数的默认值为 false),参考如下:")]),t._v(" "),s("div",{staticClass:"language-text line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("properties.put(ProducerConfig.ENABLE_IDEMPOTENCE_CONFIG, true)\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("不过如果要确保幂等性功能正常,还需要确保生产者客户端的 "),s("code",[t._v("retries、acks、max.in.flight.requests.per.connection")]),t._v("这几个参数不被配置错。实际上在使用幂等性功能的时候,用户完全可以不用配置(也不建议配置)这几个参数。如果用户显式地指定了 "),s("code",[t._v("retries")]),t._v(" 参数,那么这个参数的值必须大于0,否则会报出"),s("strong",[t._v("ConfigException")]),t._v("：")]),t._v(" "),s("div",{staticClass:"language-text line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("org.apache.kafka.common.config.ConfigException: Must set retries to non-zero when using the idempotent producer\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("如果用户还显式地指定了"),s("code",[t._v("acks")]),t._v("参数,那么还需要保证这个参数的值为-1(all),如果不为-1(这个参数的值默认为1),那么也会报出 "),s("strong",[t._v("ConfigException")]),t._v(":")]),t._v(" "),s("div",{staticClass:"language-text line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("org.apache.kafka.common.config.ConfigException: Must set acks to all in order to use the i dempotent producer. otherwise we cannot guarantee idempotence\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("如果用户没有显式地指定这个参数,那么 KafkaProducer 会将它置为-1。开启幂等性功能之后,生产者就可以如同未开启幂等时一样发送消息了。")]),t._v(" "),s("p",[t._v("为了实现生产者的幂等性, Kafka为此引入了 "),s("code",[t._v("producer id")]),t._v("(以下简称PID)和序列号(sequence number)这两个概念,这两个概念分别对应v2版的日志格式中"),s("strong",[t._v("RecordBatch")]),t._v("的 "),s("code",[t._v("producer id")]),t._v("和 "),s("code",[t._v("first regence")]),t._v(" 这两个字段。每个新的生产者实例在初始化的时候都会被分配一个PID,这个PID对用户而言是完全透明的。对于每个PID,消息发送到的每一个分区都有对应的序列号,这些序列号从0开始单调递增。生产者每发送条消息就会将"),s("code",[t._v("<PID,分区>")]),t._v("对应的序列号的值加1。")]),t._v(" "),s("p",[t._v("broker端会在内存中为每一对"),s("code",[t._v("<PID,分区>")]),t._v("维护一个序列号。对于收到的每一条消息,只有当它的序列号的值(SN_new)比 broker端中维护的对应的序列号的值(SN_old)大1(即 "),s("code",[t._v("SN_new = SN_old+1")]),t._v(")时, broker才会接收它。如果 "),s("code",[t._v("SN_new< SN_old+1")]),t._v(",那么说明消息被重复写入,broker可以直接将其丢弃。如果 "),s("code",[t._v("SN_new> SN_old+1")]),t._v(",那么说明中间有数据尚未写入,出现了乱序,暗示可能有消息丢失,对应的生产者会抛出 "),s("strong",[t._v("OutOfOrderSequenceException")]),t._v(",这个异常是个严重的异常,后续的诸如 "),s("code",[t._v("send()、beginTransaction()、commitTransaction()")]),t._v("等方法的调用都会抛出 "),s("strong",[t._v("IllegalStateException")]),t._v(" 的异常。引入序列号来实现幂等也只是针对每一对"),s("code",[t._v("<PID,分区>")]),t._v("而言的,也就是说,Kafka的幂等只能保证单个生产者会话(session)中单分区的幂等。")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ProducerRecord")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" record "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ProducerRecord")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("topic"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"key"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"msg"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nproducer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("send")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("record"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nproducer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("send")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("record"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("blockquote",[s("p",[t._v("上面示例中发送了两条相同的消息,不过这仅仅是指消息内容相同,但对 Kafka 而言是两条不同的消息,因为会为这两条消息分配不同的序列号。 Kafka并不会保证消息内容的幂等。")])]),t._v(" "),s("hr"),t._v(" "),s("h2",{attrs:{id:"_3-事务"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-事务"}},[t._v("#")]),t._v(" 3.事务")]),t._v(" "),s("p",[t._v("幂等性并不能跨多个分区运作,而事务可以弥补这个缺陷。事务可以保证对多个分区写入操作的原子性。操作的原子性是指多个操作要么全部成功,要么全部失败,不存在部分成功、部分失败的可能。")]),t._v(" "),s("p",[t._v("对流式应用("),s("code",[t._v("Stream Processing Applications")]),t._v(")而言,一个典型的应用模式为"),s("code",[t._v("consume-transform-produce")]),t._v("。在这种模式下消费和生产并存:应用程序从某个主题中消费消息,然后经过一系列转换后写入另一个主题,消费者可能在提交消费位点的过程中出现问题而导致重复消费,也有可能生产者重复生产消息。 Kafka中的事务可以使应用程序将消费消息、生产消息、提交消费位点当作原子操作来处理,同时成功或失败,即使该生产或消费会跨多个分区。")]),t._v(" "),s("p",[t._v("为了实现事务,应用程序必须提供唯一的 "),s("code",[t._v("transactionalId")]),t._v(",这个 "),s("code",[t._v("transactionalId")]),t._v(" 通过客户端参数 "),s("code",[t._v("transactional.id")]),t._v(" 来显式设置,参考如下:")]),t._v(" "),s("div",{staticClass:"language-text line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('properties.put(ProducerConfig.TRANSACTIONAL_ID_CONFIG, "transactionId");\n')])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("事务要求生产者开启幂等特性,因此通过将 "),s("code",[t._v("transactional.id")]),t._v(" 参数设置为非空从而开启事务特性的同时需要将 "),s("code",[t._v("enable.idempotence")]),t._v(" 设置为"),s("code",[t._v("true")]),t._v("(如果未显式设置,则"),s("strong",[t._v("KafkaProducer")]),t._v("默认会将它的值设置为"),s("code",[t._v("true")]),t._v("),如果用户显式地将 "),s("code",[t._v("enable.idempotence")]),t._v(" 设置为 "),s("code",[t._v("false")]),t._v(",则会报出 "),s("strong",[t._v("ConfigException")]),t._v(":"),s("code",[t._v("org.apache.kafka.common.config.ConfigException: Cannot set a transactional id without also enabling idempotence")]),t._v("。")]),t._v(" "),s("p",[s("code",[t._v("transactionalId")]),t._v("与PID一一对应,两者之间所不同的是 "),s("code",[t._v("transactionalId")]),t._v(" 由用户显式设置,而PID是由Kafka内部分配的。另外,为了保证新的生产者启动后具有相同 "),s("code",[t._v("transactionalId")]),t._v(" 的旧生产者能够立即失效,每个生产者通过 "),s("code",[t._v("transactionalId")]),t._v(" 获取PID的同时,还会获取一个单调递增的"),s("code",[t._v("producer epoch")]),t._v("(对应下面要讲述的 "),s("code",[t._v("KafkaProducer.initTransactions()")]),t._v("方法)。如果使用同一个"),s("code",[t._v("transactionalId")]),t._v("开启两个生产者,那么前一个开启的生产者会报出"),s("strong",[t._v("ProducerFencedException")]),t._v("异常。")]),t._v(" "),s("p",[s("code",[t._v("producer epoch")]),t._v("同PID和序列号对应v2版的日志格式中"),s("strong",[t._v("RecordBatch")]),t._v("的 "),s("code",[t._v("producer epoch")]),t._v("字段。从生产者的角度分析,通过事务, Kafka可以保证跨生产者会话的消息幂等发送,以及跨生产者会话的事务恢复。前者表示具有相同 "),s("code",[t._v("transactional")]),t._v(" 的新生产者实例被创建且工作的时候,旧的且拥有相同 "),s("code",[t._v("transactional")]),t._v(" 的生产者实例将不再工作。后者指当某个生产者实例宕机后,新的生产者实例可以保证任何未完成的旧事务要么被提交(Commit),要么被中止(Abort),如此可以使新的生产者实例从一个正常的状态开始工作。")]),t._v(" "),s("p",[t._v("而从消费者的角度分析,事务能保证的语义相对偏弱。出于以下原因, Kafka并不能保证已提交的事务中的所有消息都能够被消费:")]),t._v(" "),s("ul",[s("li",[t._v("对釆用日志压缩策略的主题而言,事务中的某些消息有可能被清理(相同key的消息,后写入的消息会覆盖前面写入的消息)。")]),t._v(" "),s("li",[t._v("事务中消息可能分布在同一个分区的多个日志分段("),s("strong",[t._v("LogSegment")]),t._v(")中,当老的日志分段被删除时,对应的消息可能会丢失。")]),t._v(" "),s("li",[t._v("消费者可以通过"),s("code",[t._v("seek()")]),t._v("方法访问任意"),s("code",[t._v("offset")]),t._v("的消息,从而可能遗漏事务中的部分消息。")]),t._v(" "),s("li",[t._v("消费者在消费时可能没有分配到事务内的所有分区,如此它也就不能读取事务中的所有消息。")])]),t._v(" "),s("p",[s("strong",[t._v("KafkaProducer")]),t._v(" 提供了以下与事务相关的方法：")]),t._v(" "),s("ol",[s("li",[s("p",[s("strong",[s("code",[t._v("initTransactions()")])]),t._v(": 用于初始化事务。这个方法在发送事务性消息之前必须被调用。")])]),t._v(" "),s("li",[s("p",[s("strong",[s("code",[t._v("beginTransaction()")])]),t._v(": 用于开始一个事务。在初始化了事务后，在发送一条消息之前必须启动一个事务。这个方法开始一个新的事务并将其绑定到当前线程。")])]),t._v(" "),s("li",[s("p",[s("strong",[s("code",[t._v("sendOffsetsToTransaction()")])]),t._v(": 将消费者的偏移量提交到事务中。这个方法允许消费者的偏移量提交到事务中，以确保消费者组的偏移量与生产者的事务一致。")])]),t._v(" "),s("li",[s("p",[s("strong",[s("code",[t._v("commitTransaction()")])]),t._v(": 提交当前事务。一旦发送了所有的消息，并且偏移量也已经提交，就可以调用此方法来提交当前的事务。如果事务成功提交，就将消息发布到主题。")])]),t._v(" "),s("li",[s("p",[s("strong",[s("code",[t._v("abortTransaction()")])]),t._v(": 终止当前事务。如果事务遇到错误或需要回滚，可以调用此方法来中止当前事务，清除所有尚未提交的消息，并且将偏移量提交回消费者组。")])])]),t._v(" "),s("p",[t._v("典型的事务消息发送的操作如代码所示：")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token import"}},[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("org"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("apache"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("kafka"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("clients"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("producer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token import"}},[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("java"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("util"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Properties")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("KafkaTransactionProducerExample")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" bootstrapServers "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"localhost:9092"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" topic "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"my_topic"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" transactionalId "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"transactional_id"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Properties")]),t._v(" props "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Properties")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        props"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("put")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"bootstrap.servers"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" bootstrapServers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        props"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("put")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"transactional.id"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" transactionalId"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        props"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("put")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"key.serializer"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"org.apache.kafka.common.serialization.StringSerializer"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        props"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("put")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"value.serializer"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"org.apache.kafka.common.serialization.StringSerializer"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Producer")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" producer "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("KafkaProducer")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("props"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        producer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("initTransactions")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            producer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("beginTransaction")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 添加要发送的消息")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ProducerRecord")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" record1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ProducerRecord")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("topic"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"key1"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"value1"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ProducerRecord")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" record2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ProducerRecord")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("topic"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"key2"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"value2"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n            producer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("send")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("record1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            producer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("send")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("record2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 提交事务")]),t._v("\n            producer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("commitTransaction")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ProducerFencedException")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("OutOfOrderSequenceException")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AuthorizationException")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 处理异常")]),t._v("\n            producer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("abortTransaction")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("KafkaException")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            producer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("abortTransaction")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printStackTrace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("finally")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            producer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("close")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br"),s("span",{staticClass:"line-number"},[t._v("23")]),s("br"),s("span",{staticClass:"line-number"},[t._v("24")]),s("br"),s("span",{staticClass:"line-number"},[t._v("25")]),s("br"),s("span",{staticClass:"line-number"},[t._v("26")]),s("br"),s("span",{staticClass:"line-number"},[t._v("27")]),s("br"),s("span",{staticClass:"line-number"},[t._v("28")]),s("br"),s("span",{staticClass:"line-number"},[t._v("29")]),s("br"),s("span",{staticClass:"line-number"},[t._v("30")]),s("br"),s("span",{staticClass:"line-number"},[t._v("31")]),s("br"),s("span",{staticClass:"line-number"},[t._v("32")]),s("br"),s("span",{staticClass:"line-number"},[t._v("33")]),s("br"),s("span",{staticClass:"line-number"},[t._v("34")]),s("br"),s("span",{staticClass:"line-number"},[t._v("35")]),s("br"),s("span",{staticClass:"line-number"},[t._v("36")]),s("br"),s("span",{staticClass:"line-number"},[t._v("37")]),s("br"),s("span",{staticClass:"line-number"},[t._v("38")]),s("br"),s("span",{staticClass:"line-number"},[t._v("39")]),s("br"),s("span",{staticClass:"line-number"},[t._v("40")]),s("br"),s("span",{staticClass:"line-number"},[t._v("41")]),s("br")])]),s("p",[t._v("在消费端有一个参数"),s("code",[t._v("isolation.level")]),t._v(",与事务有着莫大的关联,这个参数的默认值为"),s("code",[t._v("read_uncommitted")]),t._v(",意思是说消费端应用可以看到(消费到)未提交的事务,当然对于已提交的事务也是可见的。这个参数还可以设置为"),s("code",[t._v("read_committed")]),t._v(",表示消费端应用不可以看到尚未提交的事务内的消息。举个例子,如果生产者开启事务并向某个分区值发送3条消息msg1、msg2和msg3,在执行 "),s("code",[t._v("commitTransaction()")]),t._v(" 或 "),s("code",[t._v("abortTransaction()")]),t._v("方法前,设置为"),s("code",[t._v("read_committed")]),t._v("的消费端应用是消费不到这些消息的,不过在 "),s("strong",[t._v("Kafka Consumer")]),t._v("内部会缓存这些消息,直到生产者执行 "),s("code",[t._v("commitTransaction()")]),t._v(" 方法之后它才能将这些消息推送给消费端应用。反之,如果生产者执行了 "),s("code",[t._v("abortTransaction()")]),t._v(" 方法,那么 "),s("strong",[t._v("KafkaConsumer")]),t._v(" 会将这些缓存的消息丢弃而不推送给消费端应用。日志文件中除了普通的消息,还有一种消息专门用来标志一个事务的结束,它就是控制消息("),s("strong",[t._v("ControlBatch")]),t._v(")。控制消息一共有两种类型: "),s("strong",[t._v("COMMIT和ABORT")]),t._v(",分别用来表征事务已经成功提交或已经被成功中止。 "),s("strong",[t._v("KafkaConsumer")]),t._v("可以通过这个控制消息来判断对应的事务是被提交了还是被中止了,然后结合参数 "),s("code",[t._v("isolation.level")]),t._v("配置的隔离级别来决定是否将相应的消息返回给消费端应用,如图所示。注意 "),s("strong",[t._v("ControlBatch")]),t._v(" 对消费端应用不可见,后面还会对它有更加详细的介绍。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/huidongyin/DrawingBed/main/kafka/202311292207774.png",alt:""}})]),t._v(" "),s("p",[t._v("前面提及了 "),s("code",[t._v("consume-transform-produce")]),t._v(" 这种应用模式,该模式的具体结构如图所示。与此对应的应用示例代码如下。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/huidongyin/DrawingBed/main/kafka/202311292210565.png",alt:""}})]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token import"}},[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("org"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("apache"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("kafka"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("clients"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("consumer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token import"}},[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("org"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("apache"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("kafka"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("clients"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("producer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token import"}},[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("org"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("apache"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("kafka"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("common"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("serialization"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StringDeserializer")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token import"}},[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("org"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("apache"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("kafka"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("common"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("serialization"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StringSerializer")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token import"}},[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("java"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("util"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Collections")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token import"}},[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("java"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("util"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Properties")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("KafkaConsumeTransformProduceTransactionExample")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" bootstrapServers "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"localhost:9092"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" sourceTopic "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"input_topic"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" targetTopic "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"output_topic"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Properties")]),t._v(" consumerProps "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Properties")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        consumerProps"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("put")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"bootstrap.servers"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" bootstrapServers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        consumerProps"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("put")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"group.id"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"group_id"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        consumerProps"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("put")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"key.deserializer"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StringDeserializer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        consumerProps"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("put")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"value.deserializer"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StringDeserializer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Properties")]),t._v(" producerProps "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Properties")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        producerProps"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("put")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"bootstrap.servers"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" bootstrapServers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        producerProps"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("put")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"key.serializer"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StringSerializer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        producerProps"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("put")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"value.serializer"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StringSerializer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Consumer")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" consumer "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("KafkaConsumer")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("consumerProps"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        consumer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("subscribe")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Collections")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("singletonList")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sourceTopic"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Producer")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" producer "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("KafkaProducer")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("producerProps"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ConsumerRecords")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" records "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" consumer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("poll")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ConsumerRecord")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" record "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" records"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 从消费得到的消息中进行转换")]),t._v("\n                    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" transformedValue "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("transformMessage")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("record"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n                    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 开始事务")]),t._v("\n                    producer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("initTransactions")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                    producer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("beginTransaction")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n                    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将转换后的消息发送到目标 topic")]),t._v("\n                        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ProducerRecord")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" newRecord "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n                                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ProducerRecord")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("targetTopic"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" record"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("key")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" transformedValue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                        producer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("send")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("newRecord"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n                        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 手动提交消费位点")]),t._v("\n                        consumer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("commitSync")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                        producer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("commitTransaction")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 发生错误时回滚事务")]),t._v("\n                        producer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("abortTransaction")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("finally")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            consumer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("close")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            producer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("close")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("transformMessage")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" message"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 在这里执行你的转换逻辑")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Transformed: "')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" message"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br"),s("span",{staticClass:"line-number"},[t._v("23")]),s("br"),s("span",{staticClass:"line-number"},[t._v("24")]),s("br"),s("span",{staticClass:"line-number"},[t._v("25")]),s("br"),s("span",{staticClass:"line-number"},[t._v("26")]),s("br"),s("span",{staticClass:"line-number"},[t._v("27")]),s("br"),s("span",{staticClass:"line-number"},[t._v("28")]),s("br"),s("span",{staticClass:"line-number"},[t._v("29")]),s("br"),s("span",{staticClass:"line-number"},[t._v("30")]),s("br"),s("span",{staticClass:"line-number"},[t._v("31")]),s("br"),s("span",{staticClass:"line-number"},[t._v("32")]),s("br"),s("span",{staticClass:"line-number"},[t._v("33")]),s("br"),s("span",{staticClass:"line-number"},[t._v("34")]),s("br"),s("span",{staticClass:"line-number"},[t._v("35")]),s("br"),s("span",{staticClass:"line-number"},[t._v("36")]),s("br"),s("span",{staticClass:"line-number"},[t._v("37")]),s("br"),s("span",{staticClass:"line-number"},[t._v("38")]),s("br"),s("span",{staticClass:"line-number"},[t._v("39")]),s("br"),s("span",{staticClass:"line-number"},[t._v("40")]),s("br"),s("span",{staticClass:"line-number"},[t._v("41")]),s("br"),s("span",{staticClass:"line-number"},[t._v("42")]),s("br"),s("span",{staticClass:"line-number"},[t._v("43")]),s("br"),s("span",{staticClass:"line-number"},[t._v("44")]),s("br"),s("span",{staticClass:"line-number"},[t._v("45")]),s("br"),s("span",{staticClass:"line-number"},[t._v("46")]),s("br"),s("span",{staticClass:"line-number"},[t._v("47")]),s("br"),s("span",{staticClass:"line-number"},[t._v("48")]),s("br"),s("span",{staticClass:"line-number"},[t._v("49")]),s("br"),s("span",{staticClass:"line-number"},[t._v("50")]),s("br"),s("span",{staticClass:"line-number"},[t._v("51")]),s("br"),s("span",{staticClass:"line-number"},[t._v("52")]),s("br"),s("span",{staticClass:"line-number"},[t._v("53")]),s("br"),s("span",{staticClass:"line-number"},[t._v("54")]),s("br"),s("span",{staticClass:"line-number"},[t._v("55")]),s("br"),s("span",{staticClass:"line-number"},[t._v("56")]),s("br"),s("span",{staticClass:"line-number"},[t._v("57")]),s("br"),s("span",{staticClass:"line-number"},[t._v("58")]),s("br"),s("span",{staticClass:"line-number"},[t._v("59")]),s("br"),s("span",{staticClass:"line-number"},[t._v("60")]),s("br"),s("span",{staticClass:"line-number"},[t._v("61")]),s("br"),s("span",{staticClass:"line-number"},[t._v("62")]),s("br"),s("span",{staticClass:"line-number"},[t._v("63")]),s("br"),s("span",{staticClass:"line-number"},[t._v("64")]),s("br"),s("span",{staticClass:"line-number"},[t._v("65")]),s("br"),s("span",{staticClass:"line-number"},[t._v("66")]),s("br"),s("span",{staticClass:"line-number"},[t._v("67")]),s("br")])]),s("blockquote",[s("p",[t._v("在使用 "),s("strong",[t._v("KafkaConsumer")]),t._v(" 的时候要将 "),s("code",[t._v("enable.auto.commit")]),t._v(" 参数设置为 false,代码里也不能手动提交消费位点。")])]),t._v(" "),s("p",[t._v("为了实现事务的功能, Kafka 还引入了事务协调器("),s("strong",[t._v("TransactionCoordinator")]),t._v(")来负责处理事务,这一点可以类比一下组协调器("),s("strong",[t._v("GroupCoordinator")]),t._v(")。每一个生产者都会被指派一个特定的"),s("strong",[t._v("TransactionCoordinator")]),t._v(",所有的事务逻辑包括分派PID等都是由"),s("strong",[t._v("TransactionCoordinator")]),t._v("来负责实施的。 "),s("strong",[t._v("TransactionCoordinator")]),t._v("会将事务状态持久化到内部主题 "),s("code",[t._v("__transaction_state")]),t._v(" 中。下面就以最复杂的 "),s("code",[t._v("consume-transform-produce")]),t._v(" 的流程为例来分析Kafka事务的实现原理。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/huidongyin/DrawingBed/main/kafka/202311292229383.png",alt:""}})]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"_3-1-查找transactioncoordinator"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-查找transactioncoordinator"}},[t._v("#")]),t._v(" 3.1 查找TransactionCoordinator")]),t._v(" "),s("p",[s("strong",[t._v("TransactionCoordinator")]),t._v("负责分配PID和管理事务,因此生产者要做的第一件事情就是找出对应的"),s("strong",[t._v("TransactionCoordinator")]),t._v("所在的 broker 节点。与查找 "),s("strong",[t._v("GroupCoordinator")]),t._v(" 节点一样,也是通过 "),s("strong",[t._v("FindCoordinatorRequest")]),t._v(" 请求来实现的,只不过 "),s("strong",[t._v("FindCoordinatorRequest")]),t._v(" 中的 "),s("code",[t._v("coordinator_type")]),t._v(" 就由原来的0变成了1,由此来表示与事务相关联。")]),t._v(" "),s("p",[t._v("Kafka在收到 "),s("strong",[t._v("FindCoordinatorRequest")]),t._v(" 请求之后,会根据 "),s("code",[t._v("coordinator_key")]),t._v("(也就是"),s("code",[t._v("transactionalId")]),t._v(")查找对应的"),s("strong",[t._v("TransactionCoordinator")]),t._v("节点。如果找到,则会返回其相对应的 "),s("code",[t._v("node_id、host和port")]),t._v("信息。具体查找 "),s("strong",[t._v("TransactionCoordinator")]),t._v(" 的方式是根据 "),s("code",[t._v("transactionalId")]),t._v(" 的哈希值计算主题 "),s("code",[t._v("__transaction_state")]),t._v(" 中的分区编号,具体算法如代码清单所示。")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Utils")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("abs")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("transactionalId"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("hashCode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" transactionTopicPartitionCount\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("其中 "),s("code",[t._v("transactionTopicPartitionCount")]),t._v("为主题 "),s("code",[t._v("__transaction_state")]),t._v(" 中的分区个数,这个可以通过 broker 端参数 "),s("code",[t._v("transaction.state.log.num.partitions")]),t._v(" 来配置,默认值为50。")]),t._v(" "),s("p",[t._v("找到对应的分区之后,再寻找此分区 leader 副本所在的 broker 节点,该 broker 节点即为这个 "),s("code",[t._v("transactionalId")]),t._v(" 对应的 "),s("strong",[t._v("TransactionCoordinator")]),t._v(" 节点。")]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"_3-2-获取pid"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-获取pid"}},[t._v("#")]),t._v(" 3.2 获取PID")]),t._v(" "),s("p",[t._v("在找到 "),s("strong",[t._v("TransactionCoordinator")]),t._v(" 节点之后,就需要为当前生产者分配一个PID了。凡是开启了幂等性功能的生产者都必须执行这个操作,不需要考虑该生产者是否还开启了事务。生产者获取PID的操作是通过 "),s("strong",[t._v("InitProducerIdRequest")]),t._v(" 请求来实现的, "),s("strong",[t._v("InitProducerIdRequest")]),t._v(" 请求体结构如图所示,其中 "),s("code",[t._v("transactional_id")]),t._v(" 表示事务的 "),s("code",[t._v("transactionalId")]),t._v(", "),s("code",[t._v("transaction_timeout_ms")]),t._v(" 表示 "),s("strong",[t._v("TransactionCoordinator")]),t._v(" 等待事务状态更新的超时时间,通过生产者客户端参数 "),s("code",[t._v("transaction.timeout.ms")]),t._v(" 配置,默认值为60000。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/huidongyin/DrawingBed/main/kafka/202311292232006.png",alt:""}})]),t._v(" "),s("p",[t._v("生产者的 "),s("strong",[t._v("InitProducerIdRequest")]),t._v(" 请求会被发送给 "),s("strong",[t._v("TransactionCoordinator")]),t._v("。注意,如果未开启事务特性而只开启幂等特性,那么 "),s("strong",[t._v("InitProducerIdRequest")]),t._v(" 请求可以发送给任意的 broker。当 "),s("strong",[t._v("TransactionCoordinator")]),t._v(" 第一次收到包含该 "),s("code",[t._v("transactionalId")]),t._v(" 的 "),s("strong",[t._v("InitProducerIdRequest")]),t._v(" 请求时,它会把 "),s("code",[t._v("transactionalId")]),t._v(" 和对应的PID以消息(我们习惯性地把这类消息称为“事务日志消息”)的形式保存到主题 "),s("code",[t._v("__transaction_state")]),t._v(" 中。这样可以保证"),s("code",[t._v("<transaction_Id,PID>")]),t._v("的对应关系被持久化,从而保证即使 "),s("strong",[t._v("TransactionCoordinator")]),t._v(" 宕机该对应关系也不会丢失。存储到主题 "),s("code",[t._v("__transaction_state")]),t._v(" 中的具体内容格式如图所示。")]),t._v(" "),s("p",[t._v("其中 "),s("code",[t._v("transaction_status")]),t._v(" 包含 "),s("code",[t._v("Empty(0)、 Ongoing(1)、 PrepareCommit(2)、PrepareAbort(3)、CompleteCommit4)、CompleteAbort(5)、Dead(6)")]),t._v(" 这几种状态。在存入主题"),s("code",[t._v("__transaction_state")]),t._v("之前,事务日志消息同样会根据单独的 "),s("code",[t._v("transactionalId")]),t._v(" 来计算要发送的分区,算法同代码清单一样。")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Utils")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("abs")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("transactionalId"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("hashCode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" transactionTopicPartitionCount\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/huidongyin/DrawingBed/main/kafka/202311292239278.png",alt:""}})]),t._v(" "),s("p",[t._v("与 "),s("strong",[t._v("InitProducerIdRequest")]),t._v(" 对应的 "),s("strong",[t._v("InitProducerIdResponse")]),t._v(" 响应体结构如图所示,除了返回PID, "),s("strong",[t._v("InitProducerIdRequest")]),t._v(" 还会触发执行以下任务:")]),t._v(" "),s("ul",[s("li",[t._v("增加该PID对应的 "),s("code",[t._v("producer_epoch")]),t._v("。具有相同PID但 "),s("code",[t._v("producer_epoch")]),t._v("小于该"),s("code",[t._v("producer_epoch")]),t._v("的其他生产者新开启的事务将被拒绝。")]),t._v(" "),s("li",[t._v("恢复(Commit)或中止(Abort)之前的生产者未完成的事务。")])]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"_3-3-开启事务"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-开启事务"}},[t._v("#")]),t._v(" 3.3 开启事务")]),t._v(" "),s("p",[t._v("通过 "),s("strong",[t._v("KafkaProducer")]),t._v(" 的 "),s("code",[t._v("beginTransaction()")]),t._v(" 方法可以开启一个事务,调用该方法后,生产者本地会标记已经开启了一个新的事务,只有在生产者发送第一条消息之后 "),s("strong",[t._v("TransactionCoordinator")]),t._v(" 才会认为该事务已经开启。")]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"_3-4-consume-transform-produce"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-consume-transform-produce"}},[t._v("#")]),t._v(" 3.4 "),s("code",[t._v("Consume-Transform-Produce")])]),t._v(" "),s("p",[t._v("这个阶段囊括了整个事务的数据处理过程,其中还涉及多种请求。")]),t._v(" "),s("hr"),t._v(" "),s("h4",{attrs:{id:"_1-addpartitionstotxnrequest"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-addpartitionstotxnrequest"}},[t._v("#")]),t._v(" 1) AddPartitionsToTxnRequest")]),t._v(" "),s("p",[t._v("当生产者给一个新的分区("),s("strong",[t._v("TopicPartition")]),t._v(")发送数据前,它需要先向 "),s("strong",[t._v("TransactionCoordinator")]),t._v(" 发送 "),s("strong",[t._v("AddPartitionsToTxnRequest")]),t._v(" 请求,这个请求会让 "),s("strong",[t._v("TransactionCoordinator")]),t._v(" 将"),s("code",[t._v("<transactionld, TopicPartition>")]),t._v("的对应关系存储在主题"),s("code",[t._v("__transaction_state")]),t._v("中。有了这个对照关系之后,就可以在后续的步骤中为每个分区设置 COMMIT或 ABORT标记。如果该分区是对应事务中的第一个分区,那么此时 "),s("strong",[t._v("TransactionCoordinator")]),t._v(" 还会启动对该事务的计时。")]),t._v(" "),s("hr"),t._v(" "),s("h4",{attrs:{id:"_2-producerequest"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-producerequest"}},[t._v("#")]),t._v(" 2) ProduceRequest")]),t._v(" "),s("p",[t._v("这一步骤很容易理解,生产者通过 "),s("strong",[t._v("ProduceRequest")]),t._v(" 请求发送消息("),s("strong",[t._v("ProducerBatch")]),t._v(")到用户自定义主题中,这一点和发送普通消息时相同。和普通的消息不同的是, "),s("strong",[t._v("ProducerBatch")]),t._v(" 中会包含实质的PID、 "),s("code",[t._v("producer_epoch")]),t._v("和 "),s("code",[t._v("sequence number")]),t._v("。")]),t._v(" "),s("hr"),t._v(" "),s("h4",{attrs:{id:"_3-addoffsetstotxnrequest"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-addoffsetstotxnrequest"}},[t._v("#")]),t._v(" 3) AddOffsetsToTxnRequest")]),t._v(" "),s("p",[t._v("通过 "),s("strong",[t._v("KafkaProducer")]),t._v(" 的 "),s("code",[t._v("sendOffsetsToTransaction()")]),t._v(" 方法可以在一个事务批次里处理消息的消费和发送,方法中包含2个参数:"),s("code",[t._v("Map<TopicPartition, OffsetAndMetadata> offsets")]),t._v("和 "),s("code",[t._v("groupId")]),t._v(" 这个方法会向 "),s("strong",[t._v("TransactionCoordinator")]),t._v(" 节点发送 "),s("strong",[t._v("AddOffsetsToTxnRequest")]),t._v(" 请求, "),s("strong",[t._v("TransactionCoordinator")]),t._v(" 收到这个请求之后会通过 "),s("code",[t._v("groupId")]),t._v(" 来推导出在 "),s("code",[t._v("__consumer_offsets")]),t._v(" 中的分区,之后 "),s("strong",[t._v("TransactionCoordinator")]),t._v(" 会将这个分区保存在 "),s("code",[t._v("__transaction_state")]),t._v(" 中。")]),t._v(" "),s("hr"),t._v(" "),s("h4",{attrs:{id:"_4-txnoffsetcommitrequest"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-txnoffsetcommitrequest"}},[t._v("#")]),t._v(" 4) TxnOffsetCommitRequest")]),t._v(" "),s("p",[t._v("这个请求也是 "),s("code",[t._v("sendOffsetsToTransaction()")]),t._v(" 方法中的一部分,在处理完 "),s("strong",[t._v("AddOffsetsToTxnRequest")]),t._v(" 之后,生产者还会发送 "),s("strong",[t._v("TxnOffsetCommitRequest")]),t._v(" 请求给 "),s("strong",[t._v("GroupCoordinator")]),t._v(",从而将本次事务中包含的消费位点信息 "),s("code",[t._v("offsets")]),t._v(" 存储到主题"),s("code",[t._v("__consumer_offsets")]),t._v("中。")]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"_3-5-提交或者中止事务"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-提交或者中止事务"}},[t._v("#")]),t._v(" 3.5 提交或者中止事务")]),t._v(" "),s("p",[t._v("一旦数据被写入成功,我们就可以调用 "),s("strong",[t._v("KafkaProducer")]),t._v(" 的 "),s("code",[t._v("commitTransaction()")]),t._v(" 方法或 "),s("code",[t._v("abortTransaction()")]),t._v(" 方法来结束当前的事务。")]),t._v(" "),s("hr"),t._v(" "),s("h4",{attrs:{id:"_1-endtxnrequest"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-endtxnrequest"}},[t._v("#")]),t._v(" 1) EndTxnRequest")]),t._v(" "),s("p",[t._v("无论调用 "),s("code",[t._v("commitTransaction()")]),t._v(" 方法还是 "),s("code",[t._v("abortTransaction()")]),t._v(" 方法,生产者都会向"),s("strong",[t._v("TransactionCoordinator")]),t._v("发送 "),s("strong",[t._v("EndTxnRequest")]),t._v(" 请求,以此来通知它提交(Commit)事务还是中止(Abort)事务。")]),t._v(" "),s("p",[s("strong",[t._v("TransactionCoordinator")]),t._v(" 在收到 "),s("strong",[t._v("EndTxnRequest")]),t._v(" 请求后会执行如下操作:")]),t._v(" "),s("ol",[s("li",[t._v("将 PREPARE_COMMIT或 PREPARE_ABORT消息写入主题 "),s("code",[t._v("__transaction_state")]),t._v("示。")]),t._v(" "),s("li",[t._v("通过 WriteTxnMarkersRequest请求将 COMMIT或 ABORT信息写入用户所使用的普通主题和"),s("code",[t._v("__consumer_offsets")]),t._v("。")]),t._v(" "),s("li",[t._v("将 COMPLETE_COMMIT或 COMPLETE_ABORT信息写入内部主题 "),s("code",[t._v("__transaction_state")]),t._v("。")])]),t._v(" "),s("hr"),t._v(" "),s("h4",{attrs:{id:"_2-writetxnmarkersrequest"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-writetxnmarkersrequest"}},[t._v("#")]),t._v(" 2) WriteTxnMarkersRequest")]),t._v(" "),s("p",[s("strong",[t._v("WriteTxnMarkersRequest")]),t._v("请求是由 "),s("strong",[t._v("TransactionCoordinator")]),t._v(" 发向事务中各个分区的 leader 节点的,当节点收到这个请求之后,会在相应的分区中写入控制消息("),s("strong",[t._v("ControlBatch")]),t._v(")。控制消息用来标识事务的终结,它和普通的消息一样存储在日志文件中,"),s("strong",[t._v("RecordBatch")]),t._v("中 "),s("code",[t._v("attributes")]),t._v(" 字段的第6位用来标识当前消息是否是控制消息。如果是控制消息,那么这一位会置为1,否则会置为0。")]),t._v(" "),s("p",[s("code",[t._v("attributes")]),t._v("字段中的第5位用来标识当前消息是否处于事务中,如果是事务中的消息那么这一位置为1,否则置为0。由于控制消息也处于事务中,所以 "),s("code",[t._v("attributes")]),t._v(" 字段的第5位和第6位都被置为1。 "),s("strong",[t._v("ControlBatch")]),t._v(" 中只有一个 "),s("strong",[t._v("Record")]),t._v(", "),s("strong",[t._v("Record")]),t._v(" 中的 "),s("code",[t._v("timestamp delta")]),t._v("字段和"),s("code",[t._v("offset delta")]),t._v("字段的值都为0。")]),t._v(" "),s("p",[t._v("就目前的Kafka版本而言,"),s("code",[t._v("key")]),t._v("和"),s("code",[t._v("value")]),t._v("内部的 "),s("code",[t._v("version")]),t._v(" 值都为0,"),s("code",[t._v("key")]),t._v("中的"),s("code",[t._v("type")]),t._v("表示控制类型:0表示 ABORT,1表示 COMMIT;"),s("code",[t._v("value")]),t._v("中的 "),s("code",[t._v("coordinator_epoch")]),t._v("表示"),s("strong",[t._v("TransactionCoordinator")]),t._v("的纪元(版本), "),s("strong",[t._v("TransactionCoordinator")]),t._v("切换的时候会更新其值。")]),t._v(" "),s("hr"),t._v(" "),s("h4",{attrs:{id:"_3-写入最终的-complete-commit或-complete-abort"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-写入最终的-complete-commit或-complete-abort"}},[t._v("#")]),t._v(" 3) 写入最终的 COMPLETE_COMMIT或 COMPLETE_ABORT")]),t._v(" "),s("p",[s("strong",[t._v("TransactionCoordinator")]),t._v("将最终的 "),s("strong",[t._v("COMPLETE_COMMIT")]),t._v(" 或 "),s("strong",[t._v("COMPLETE_ABORT")]),t._v(" 信息写入主题 "),s("code",[t._v("__transaction_state")]),t._v(" 以表明当前事务已经结束,此时可以删除主题 "),s("code",[t._v("__transaction_state")]),t._v(" 中所有关于该事务的消息。由于主题 "),s("code",[t._v("__transaction_state")]),t._v(" 采用的日志清理策略为日志压缩,所以这里的删除只需将相应的消息设置为墓碑消息即可。")]),t._v(" "),s("hr")])}),[],!1,null,null,null);s.default=r.exports}}]);