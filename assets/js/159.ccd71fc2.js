(window.webpackJsonp=window.webpackJsonp||[]).push([[159],{540:function(t,a,e){"use strict";e.r(a);var r=e(4),s=Object(r.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"_1-搜索与商品服务的问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-搜索与商品服务的问题"}},[t._v("#")]),t._v(" 1.搜索与商品服务的问题")]),t._v(" "),a("p",[t._v("假设我们已经完成了商品详情和搜索系统的开发。我们思考一下，是否存在问题？")]),t._v(" "),a("p",[t._v("商品的原始数据保存在数据库中，增删改查都在数据库中完成。搜索服务数据来源是索引库，如果数据库商品发生变化，索引库数据能否及时更新。如果我们在后台修改了商品的价格，搜索页面依然是旧的价格，这样显然不对。该如何解决？")]),t._v(" "),a("p",[a("strong",[t._v("方案1")]),t._v("：每当后台对商品做增删改操作，同时要修改索引库数据")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/huidongyin/DrawingBed/main/RabbitMQ/202311051819850.png",alt:"image.png"}})]),t._v(" "),a("p",[a("strong",[t._v("方案2")]),t._v("：搜索服务对外提供操作接口，后台在商品增删改后，调用接口")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/huidongyin/DrawingBed/main/RabbitMQ/202311051820046.png",alt:"image.png"}})]),t._v(" "),a("p",[t._v("以上两种方式都有同一个严重问题：就是代码耦合，后台服务中需要嵌入搜索和商品页面服务，违背了微服务的独立原则。所以，我们会通过另外一种方式来解决这个问题："),a("strong",[t._v("消息队列")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/huidongyin/DrawingBed/main/RabbitMQ/202311051820235.png",alt:"image.png"}})]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"_2-消息队列"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-消息队列"}},[t._v("#")]),t._v(" 2.消息队列")]),t._v(" "),a("h3",{attrs:{id:"_2-1什么是消息队列"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1什么是消息队列"}},[t._v("#")]),t._v(" 2.1什么是消息队列")]),t._v(" "),a("p",[t._v("消息队列，即"),a("code",[t._v("MQ")]),t._v("，"),a("code",[t._v("Message Queue")]),t._v("。")]),t._v(" "),a("p",[t._v("“消息”是在两台计算机间传送的数据单位。消息可以非常简单，例如只包含文本字符串；也可以更复杂，可能包含嵌入对象。")]),t._v(" "),a("p",[t._v("消息被发送到队列中。“消息队列”是在消息的传输过程中保存消息的容器。消息队列管理器在将消息从它的源中继到它的目标时充当中间人。队列的主要目的是提供路由并保证消息的传递；如果发送消息时接收者不可用，消息队列会保留消息，直到可以成功地传递它。")]),t._v(" "),a("p",[t._v("消息队列是典型的：生产者、消费者模型。生产者不断向消息队列中生产消息，消费者不断的从队列中获取消息。因为消息的生产和消费都是异步的，而且只关心消息的发送和接收，没有业务逻辑的侵入，这样就实现了生产者和消费者的解耦。")]),t._v(" "),a("p",[t._v("结合前面所说的问题：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("商品服务对商品增删改以后，无需去操作索引库，只是发送一条消息，也不关心消息被谁接收。")])]),t._v(" "),a("li",[a("p",[t._v("搜索服务接收消息，去处理索引库。")])])]),t._v(" "),a("p",[t._v("如果以后有其它系统也依赖商品服务的数据，同样监听消息即可，商品服务无需任何代码修改。")]),t._v(" "),a("hr"),t._v(" "),a("h3",{attrs:{id:"_2-2amqp和jms"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2amqp和jms"}},[t._v("#")]),t._v(" 2.2AMQP和JMS")]),t._v(" "),a("p",[t._v("MQ是消息通信的模型，并不是具体实现。现在实现MQ的有两种主流方式："),a("strong",[t._v("AMQP")]),t._v("、JMS。")]),t._v(" "),a("p",[a("strong",[t._v("两者间的区别和联系：")])]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("JMS")]),t._v("是定义了统一接口，对消息操作进行统一；"),a("code",[t._v("AMQP")]),t._v("通过规定协议统一数据交互的格式；")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("JMS")]),t._v("限定了必须使用Java语言；"),a("code",[t._v("AMQP")]),t._v("只是协议，不规定实现方式，因此是跨语言的")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("JMS")]),t._v("规定了两种消息模型（queue, topic）；而"),a("code",[t._v("AMQP")]),t._v("的消息模型更加丰富")])])]),t._v(" "),a("hr"),t._v(" "),a("h3",{attrs:{id:"_2-3常见mq产品"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-3常见mq产品"}},[t._v("#")]),t._v(" 2.3常见MQ产品")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("ActiveMQ")]),t._v("：基于"),a("code",[t._v("JMS")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("RabbitMQ")]),t._v("：基于"),a("code",[t._v("AMQP")]),t._v("协议，erlang语言开发，稳定性好")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("RocketMQ")]),t._v("：基于"),a("code",[t._v("JMS")]),t._v("，阿里巴巴产品，目前交由"),a("code",[t._v("Apache")]),t._v("基金会")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("Kafka")]),t._v("：分布式消息系统，高吞吐量，处理日志，"),a("code",[t._v("Scala和Java")]),t._v("编写，"),a("code",[t._v("Apache")])])])]),t._v(" "),a("hr"),t._v(" "),a("h3",{attrs:{id:"_2-4-rabbitmq"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-rabbitmq"}},[t._v("#")]),t._v(" 2.4 RabbitMQ")]),t._v(" "),a("p",[t._v("官网： "),a("a",{attrs:{href:"http://www.rabbitmq.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://www.rabbitmq.com/"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("官方教程："),a("a",{attrs:{href:"http://www.rabbitmq.com/getstarted.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://www.rabbitmq.com/getstarted.html"),a("OutboundLink")],1)]),t._v(" "),a("hr"),t._v(" "),a("h3",{attrs:{id:"_2-5-mq-三大主要功能"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-mq-三大主要功能"}},[t._v("#")]),t._v(" 2.5 MQ 三大主要功能")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("异步")])]),t._v(" "),a("li",[a("p",[t._v("解耦")])]),t._v(" "),a("li",[a("p",[t._v("削峰")])])]),t._v(" "),a("hr"),t._v(" "),a("h3",{attrs:{id:"_2-6-rabbitmq工作模型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-6-rabbitmq工作模型"}},[t._v("#")]),t._v(" 2.6 RabbitMQ工作模型")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/huidongyin/DrawingBed/main/RabbitMQ/202311051821791.png",alt:"image.png"}})]),t._v(" "),a("hr"),t._v(" "),a("h4",{attrs:{id:"_1-broker"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-broker"}},[t._v("#")]),t._v(" 1.Broker")]),t._v(" "),a("p",[t._v("我们要使用RabbitMQ来收发消息，必须要安装个RabbitMQ的服务，可以安装在Windows上面也可以安装在Linux 上面，默认是5672的端口。这台RabbitMQ的服务器我们把它叫做 Broker， MQ 服务器帮助我们做的事情就是存储、转发消息。")]),t._v(" "),a("hr"),t._v(" "),a("h4",{attrs:{id:"_2-connection"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-connection"}},[t._v("#")]),t._v(" 2.Connection")]),t._v(" "),a("p",[t._v("无论是生产者发送消息，还是消费者接收消息，都必须要跟 Broker 之间建立一个连接，这个连接是一个 TCP 的长连接。")]),t._v(" "),a("hr"),t._v(" "),a("h4",{attrs:{id:"_3-channel"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-channel"}},[t._v("#")]),t._v(" 3.Channel")]),t._v(" "),a("p",[t._v("如果所有的生产者发送消息和消费者接收消息，都直接创建和释放 TCP 长连接的话，对于 Broker 来说肯定会造成很大的性能损耗，因为 TCP 连接是非常宝贵的资源，创建和释放也要消耗时间。所以在 AMQP 里面引入了 Channel 的概念，它是一个虚拟的连接。这样我们就可以在保持的 TCP 长连接里面去创建和释放Channel，大大了减少了资源消耗。")]),t._v(" "),a("hr"),t._v(" "),a("h4",{attrs:{id:"_4-queue"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-queue"}},[t._v("#")]),t._v(" 4.Queue")]),t._v(" "),a("p",[t._v("队列是真正用来存储消息的，是一个独立运行的进程，有自己的数据库（Mnesia）。")]),t._v(" "),a("p",[t._v("我们可以基于事件机制，实现消费者对队列的监听。")]),t._v(" "),a("p",[t._v("由于队列有 FIFO 的特性，只有确定前一条消息被消费者接收之后，才会把这条消息从数据库删除，继续投递下一条消息。")]),t._v(" "),a("hr"),t._v(" "),a("h4",{attrs:{id:"_5-exchange"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-exchange"}},[t._v("#")]),t._v(" 5.Exchange")]),t._v(" "),a("p",[t._v("在 RabbitMQ 里面永远不会出现消息直接发送到队列的情况。因为在 AMQP 里面引入了交换机（Exchange）的概念，用来实现消息的灵活路由。")]),t._v(" "),a("p",[t._v("交换机是一个绑定列表，用来查找匹配的绑定关系。")]),t._v(" "),a("p",[t._v("队列使用绑定键（Binding Key）跟交换机建立绑定关系。")]),t._v(" "),a("p",[t._v("生产者发送的消息需要携带路由键（Routing Key），交换机收到消息时会根据它保存的绑定列表，决定将消息路由到哪些与它绑定的队列上。")]),t._v(" "),a("p",[t._v("注意：交换机与队列、队列与消费者都是多对多的关系。")]),t._v(" "),a("hr"),t._v(" "),a("h4",{attrs:{id:"_6-vhost"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-vhost"}},[t._v("#")]),t._v(" 6.Vhost")]),t._v(" "),a("p",[t._v("VHOST 除了可以提高硬件资源的利用率之外，还可以实现资源的隔离和权限的控制。")]),t._v(" "),a("p",[t._v("不同的 VHOST 中可以有同名的 Exchange 和 Queue，它们是完全透明的。")]),t._v(" "),a("p",[t._v("这个时候，我们可以为不同的业务系统创建不同的用户（User），然后给这些用户分配 VHOST 的权限。")]),t._v(" "),a("hr"),t._v(" "),a("h3",{attrs:{id:"_2-7-使用rabbitmq会带来的一些问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-7-使用rabbitmq会带来的一些问题"}},[t._v("#")]),t._v(" 2.7 使用rabbitMQ会带来的一些问题？")]),t._v(" "),a("p",[t._v("系统可用性降低：原来是两个节点的通信，现在还需要独立运行一个服务，如果 MQ服务器或者通信网络出现问题，就会导致请求失败。")]),t._v(" "),a("p",[t._v("系统复杂性提高： 为什么说复杂？第一个就是你必须要理解相关的模型和概念，才能正确地配置和使用 MQ。第二个，使用 MQ 发送消息必须要考虑消息丢失和消息重复消费的问题。一旦消息没有被正确地消费，就会带来数据一致性的问题。")]),t._v(" "),a("p",[t._v("所以，我们在做系统架构的时候一定要根据实际情况来分析，不要因为我们说了这么多的 MQ 能解决的问题，就盲目地引入 MQ。")]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"_3-下载和安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-下载和安装"}},[t._v("#")]),t._v(" 3.下载和安装")]),t._v(" "),a("h3",{attrs:{id:"_3-1-下载"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-下载"}},[t._v("#")]),t._v(" 3.1 下载")]),t._v(" "),a("p",[a("code",[t._v("RabbitMQ")]),t._v("是Erlang语言编写，所以"),a("code",[t._v("Erang")]),t._v("环境必须要有，注："),a("code",[t._v("Erlang")]),t._v("环境一定要与"),a("code",[t._v("RabbitMQ")]),t._v("版本匹配："),a("a",{attrs:{href:"https://www.rabbitmq.com/which-erlang.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.rabbitmq.com/which-erlang.html"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("code",[t._v("Erlang")]),t._v("下载地址：https://www.rabbitmq.com/releases/erlang/（根据自身需求及匹配关系，下载对应rpm包）")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://dl.bintray.com/rabbitmq-erlang/rpm/erlang/21/el/7/x86_64/erlang-21.3.8.9-1.el7.x86_64.rpm",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://dl.bintray.com/rabbitmq-erlang/rpm/erlang/21/el/7/x86_64/erlang-21.3.8.9-1.el7.x86_64.rpm"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("code",[t._v("rabbitmq")]),t._v("安装依赖于"),a("code",[t._v("socat")]),t._v("，所以需要下载"),a("code",[t._v("socat")]),t._v("。")]),t._v(" "),a("p",[a("code",[t._v("socat")]),t._v("下载地址："),a("a",{attrs:{href:"http://repo.iotti.biz/CentOS/7/x86_64/socat-1.7.3.2-5.el7.lux.x86_64.rpm",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://repo.iotti.biz/CentOS/7/x86_64/socat-1.7.3.2-5.el7.lux.x86_64.rpm"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("code",[t._v("RabbitMQ")]),t._v("下载地址：https://www.rabbitmq.com/download.html（根据自身需求及匹配关系，下载对应rpm包）"),a("code",[t._v("rabbitmq-server-3.8.1-1.el7.noarch.rpm")])]),t._v(" "),a("hr"),t._v(" "),a("h3",{attrs:{id:"_3-2安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2安装"}},[t._v("#")]),t._v(" 3.2安装")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("rpm -ivh erlang-21.3.8.9-1.el7.x86_64.rpm\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("rpm -ivh socat-1.7.3.2-1.el6.lux.x86_64.rpm\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("rpm -ivh rabbitmq-server-3.8.1-1.el7.noarch.rpm\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[a("strong",[t._v("启用管理插件")])]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("rabbitmq-plugins enable rabbitmq_management\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[a("strong",[t._v("启动RabbitMQ")])]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("systemctl start rabbitmq-server.service\nsystemctl status rabbitmq-server.service\nsystemctl restart rabbitmq-server.service\nsystemctl stop rabbitmq-server.service\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("p",[a("strong",[t._v("查看进程")])]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("ps -ef | grep rabbitmq\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/huidongyin/DrawingBed/main/RabbitMQ/202311051821826.png",alt:"image.png"}}),t._v(" "),a("strong",[t._v("启用延时队列插件")])]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("rabbitmq-plugins enable rabbitmq_delayed_message_exchange\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("hr"),t._v(" "),a("h3",{attrs:{id:"_3-3-测试"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-测试"}},[t._v("#")]),t._v(" 3.3 测试")]),t._v(" "),a("p",[t._v("o 关闭防火墙："),a("code",[t._v("systemctl stop firewalld.service")])]),t._v(" "),a("p",[t._v("o 在web浏览器中输入地址："),a("code",[t._v("http://虚拟机ip:15672/")])]),t._v(" "),a("p",[t._v("o 输入默认账号密码:"),a("code",[t._v("guest : guest，guest")]),t._v("用户默认不允许远程连接。")]),t._v(" "),a("p",[a("strong",[t._v("添加用户")])]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("rabbitmqctl add_user root root\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[a("strong",[t._v("分配角色")])]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("rabbitmqctl set_user_tags root administrator\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[a("strong",[t._v("修改密码")])]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("rabbitmqctl change_password root root\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[a("strong",[t._v("查看所有用户")])]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("rabbitmqctl list_users\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("hr"),t._v(" "),a("h3",{attrs:{id:"_3-4卸载"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-4卸载"}},[t._v("#")]),t._v(" 3.4卸载")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("\trpm -qa | grep rabbitmq\n\trpm -e rabbitmq-server\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("hr"),t._v(" "),a("h2",{attrs:{id:"_4管理界面"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4管理界面"}},[t._v("#")]),t._v(" 4管理界面")]),t._v(" "),a("h3",{attrs:{id:"_4-1-添加用户"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-添加用户"}},[t._v("#")]),t._v(" 4.1 添加用户")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/huidongyin/DrawingBed/main/RabbitMQ/202311051821396.png",alt:"image.png"}})]),t._v(" "),a("ol",[a("li",[t._v("超级管理员(administrator)")])]),t._v(" "),a("blockquote",[a("p",[t._v("可登录管理控制台，可查看所有的信息，并且可以对用户，策略(policy)进行操作。")])]),t._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[t._v("监控者(monitoring)")])]),t._v(" "),a("blockquote",[a("p",[t._v("可登录管理控制台，同时可以查看rabbitmq节点的相关信息(进程数，内存使用情况，磁盘使用情况等)")])]),t._v(" "),a("ol",{attrs:{start:"3"}},[a("li",[t._v("策略制定者(policymaker)")])]),t._v(" "),a("blockquote",[a("p",[t._v("可登录管理控制台, 同时可以对policy进行管理。但无法查看节点的相关信息(上图红框标识的部分)。")])]),t._v(" "),a("ol",{attrs:{start:"4"}},[a("li",[t._v("普通管理者(management)")])]),t._v(" "),a("blockquote",[a("p",[t._v("仅可登录管理控制台，无法看到节点信息，也无法对策略进行管理。")])]),t._v(" "),a("ol",{attrs:{start:"5"}},[a("li",[t._v("其他")])]),t._v(" "),a("blockquote",[a("p",[t._v("无法登录管理控制台，通常就是普通的生产者和消费者。")])]),t._v(" "),a("hr"),t._v(" "),a("h3",{attrs:{id:"_4-2-创建-virtual-hosts"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-创建-virtual-hosts"}},[t._v("#")]),t._v(" 4.2 创建 Virtual Hosts")]),t._v(" "),a("p",[t._v("虚拟主机：类似于mysql中的database。他们都是以“/”开头")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/huidongyin/DrawingBed/main/RabbitMQ/202311051822109.png",alt:"image.png"}})]),t._v(" "),a("hr")])}),[],!1,null,null,null);a.default=s.exports}}]);