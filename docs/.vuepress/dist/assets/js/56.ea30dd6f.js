(window.webpackJsonp=window.webpackJsonp||[]).push([[56],{400:function(t,a,s){"use strict";s.r(a);var e=s(4),r=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("生产者和消费者的设计理念所针对的都是主题和分区层面的操作。主题作为消息的归类，可以再细分为一到多个分区，分区可以看做是对消息的二次分类。分区的划分为kafka提供了可伸缩性，水平扩展功能，还可以通过多副本即使来为kafka提供数据冗余以提高数据可靠性。")]),t._v(" "),a("p",[t._v("从kafka的底层实现来看，主题和分区都是逻辑上的概念，分区可以有一到多个副本，每个副本对应一个日志文件，每个日志文件对应一到多个日志分段，每个日志分段还可以细分为"),a("strong",[t._v("索引文件")]),t._v(" ，"),a("strong",[t._v("日志存储文件")]),t._v(" 和 "),a("strong",[t._v("快照文件")]),t._v(" 等。")]),t._v(" "),a("p",[t._v("Topic管理包括创建，查看Topic信息，修改和删除等操作。可以通过Kafka提供的 "),a("code",[t._v("kafka-topics.sh")]),t._v("\n脚本来执行这些操作，这个脚本位于"),a("code",[t._v("$KAFKA_HOME/bin/")]),t._v("目录下，其核心代码仅仅只有一行：")]),t._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("exec")]),t._v(" $ "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dirname "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" /kafka-run-class.sh kafka.admin.TopicCommand "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$@")]),t._v('"')]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("可以看到其实质上是调用了 "),a("code",[t._v("kafka.admin.TopicCommand")]),t._v("类来执行主题管理的操作。主题的管理并非只有使用"),a("code",[t._v("kafka-topics.sh")]),t._v("\n脚本这一种方式，我们还可以通过"),a("code",[t._v("KafkaAdminClient")]),t._v("\n的方式实现（这种方式本质上是通过送"),a("code",[t._v("CreateTopicsRequest")]),t._v(","),a("code",[t._v("DeleteTopicsRequest")]),t._v("等请求来实现的）。")]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"_1-创建主题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-创建主题"}},[t._v("#")]),t._v(" 1. 创建主题")]),t._v(" "),a("p",[t._v("如果 broker 端配置参数 "),a("code",[t._v("auto.create.topics.enable")]),t._v(" 设置为 tue(默认值就是 true)\n，那么当生产者向一个尚未创建的主题发送消息时,会自动创建一个分区数为 "),a("code",[t._v("num.partitions")]),t._v("(默认值为1)\n、副本因子为 "),a("code",[t._v("default.replication.factor")]),t._v(" (默认值为1)\n的主题。除此之外，当一个消费者开始从未知主题中读取消息时，或者当任意一个客户端向未知主题发送元数据请求时，都会按照配置参数 "),a("code",[t._v("num.partitions")]),t._v("\n和 "),a("code",[t._v("default.replication.factor")]),t._v("\n的值来创建一个相应的主题。很多时候，这种自动创建主题的行为都是非预期的。除非有特殊应用需求，否则不建议将 "),a("code",[t._v("auto.create.topics.enable")]),t._v("\n参数设置为 true，这个参数会增加主题的管理与维护的难度。")]),t._v(" "),a("p",[t._v("下面通过 "),a("code",[t._v("kafka-topics.sh")]),t._v("脚本创建一个Topic。")]),t._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("root@101ed4754423:/opt/kafka_2.13-2.8.1/bin"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ./kafka-topics.sh --zookeeper kafka-zookeeper:2181 --create --topic topic-create --replication-factor 2 --partitions 4")]),t._v("\nCreated topic topic-create.\nroot@101ed4754423:/opt/kafka_2.13-2.8.1/bin"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("p",[t._v("上面的示例中创建了一个分区数为 4、副本因子为 2 的主题。示例中的环境是一个包含 3个 broker 节点的集群，每个节点的名称和\nbrokerld 的对照关系如下:")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("节点名称")]),t._v(" "),a("th",[t._v("brokerId")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("Kafka0")]),t._v(" "),a("td",[t._v("0")])]),t._v(" "),a("tr",[a("td",[t._v("Kafka1")]),t._v(" "),a("td",[t._v("1")])]),t._v(" "),a("tr",[a("td",[t._v("Kafka2")]),t._v(" "),a("td",[t._v("2")])])])]),t._v(" "),a("p",[t._v("在执行完脚本之后，Kafka 会在 "),a("code",[t._v("log.dir")]),t._v(" 或 "),a("code",[t._v("log.dirs")]),t._v("\n参数所配置的目录下创建相应的主题分区，默认情况下这个目录为"),a("code",[t._v("/tmp/kafka-logs/")]),t._v("。我们来看当前broker节点上创建的主题分区：")]),t._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("root@101ed4754423:/kafka"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# cd kafka-logs-101ed4754423/")]),t._v("\nroot@101ed4754423:/kafka/kafka-logs-101ed4754423"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ls -al ./ | grep topic-create")]),t._v("\ndrwxr-xr-x  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" root root "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4096")]),t._v(" Oct "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("31")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("13")]),t._v(":49 topic-create-0\ndrwxr-xr-x  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" root root "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4096")]),t._v(" Oct "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("31")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("13")]),t._v(":49 topic-create-1\nroot@101ed4754423:/kafka/kafka-logs-101ed4754423"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("p",[t._v("可以看到当前节点中创建了 2 个文件夹 "),a("code",[t._v("topic-create-0")]),t._v(" 和 "),a("code",[t._v("topic-create-1")]),t._v("，对应主题 "),a("code",[t._v("topic-create")]),t._v(" 的2 个分区编号为0和1\n的分区，命名方式可以概括为"),a("code",[t._v("<topic>-<partition>")]),t._v("。严谨地说，其实"),a("code",[t._v("<topic>-<partition>")]),t._v("\n这类文件夹对应的不是分区，分区同主题一样是一个逻辑的概念而没有物理上的存在。并且这里我们也只是看到了 2 个分区，而我们创建的是\n4 个分区，其余 2个分区被分配到了 Kafka1 和 Kafka2 节点中。")]),t._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ls -al ./ |grep topic-create")]),t._v("\ndrwxr-xr-x  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" root root "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4096")]),t._v(" Oct "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("31")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("13")]),t._v(":49 topic-create-1\ndrwxr-xr-x  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" root root "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4096")]),t._v(" Oct "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("31")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("13")]),t._v(":49 topic-create-2\ndrwxr-xr-x  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" root root "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4096")]),t._v(" Oct "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("31")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("13")]),t._v(":49 topic-create-3\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ls -al ./ |grep topic-create")]),t._v("\ndrwxr-xr-x  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" root root "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4096")]),t._v(" Oct "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("31")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("13")]),t._v(":49 topic-create-0\ndrwxr-xr-x  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" root root "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4096")]),t._v(" Oct "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("31")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("13")]),t._v(":49 topic-create-2\ndrwxr-xr-x  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" root root "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4096")]),t._v(" Oct "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("31")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("13")]),t._v(":49 topic-create-3\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("p",[t._v("三个 broker 节点一共创建了 8 个文件夹，这个数字 8 实质上是分区数 4与副本因子2 的乘积。每个副本(\n或者更确切地说应该是日志，副本与日志一一对应)才真正对应了一个命名形式如"),a("code",[t._v("<topic>-<partition>")]),t._v("的文件来。")]),t._v(" "),a("p",[t._v("主题和分区都是提供给上层用户的抽象，而在副本层面或更加确切地说是 Log 层面才有实际物理上的存在。同一个分区中的多个副本必须分布在不同的\nbroker 中，这样才能提供有效的数据冗余。对于示例中的分区数为 4副本因子为 2、broker 数为 3 的情况下，按照 2、3、3 的分区副本个数分配给各个\nbroker 是最优的选择。再比如在分区数为 3、副本因子为 3，并且 broker 数同样为 3 的情况下，分配 3、3、3的分区副本个数给各个\nbroker 是最优的选择，也就是每个 broker 中都拥有所有分区的一个副本。")]),t._v(" "),a("p",[a("img",{attrs:{src:"/images/kafka/%E4%B8%BB%E9%A2%98&%E5%88%86%E5%8C%BA/01.png#id=tm6nq&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title=",alt:""}})]),t._v(" "),a("p",[t._v("我们不仅可以通过日志文件的根目录来查看集群中各个 broker 的分区副本的分配情况,可以通过 ZooKeeper 客户端来获取。当创建一个主题时会在\nZooKeeper 的"),a("code",[t._v("/brokers/topics")]),t._v("目录下创建一个同名的实节点，该节点中记录了该主题的分区副本分配方案。示例如下，")]),t._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("zk: localhost:2181"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("CONNECTED"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" get /brokers/topics/topic-create\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"partitions"')]),t._v(":"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0"')]),t._v(":"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2,0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(","),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1"')]),t._v(":"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0,1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(","),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2"')]),t._v(":"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1,2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(","),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"3"')]),t._v(":"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2,1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(","),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"topic_id"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"iBO5jkiXSVuDFrlFowPUVQ"')]),t._v(","),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"adding_replicas"')]),t._v(":"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(","),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"removing_replicas"')]),t._v(":"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(","),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"version"')]),t._v(":3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("zk: localhost:2181"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("CONNECTED"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("p",[t._v("示例数据中的"),a("code",[t._v("2:[1,2]")]),t._v("表示分区 2 分配了 2 个副本，分别在 brokerId 为 1和 2 的 broker节点中。")]),t._v(" "),a("p",[t._v("通过 "),a("code",[t._v("describe")]),t._v(" 指令类型来查看分区副本的分配细节。")]),t._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("root@101ed4754423:/opt/kafka_2.13-2.8.1/bin"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ./kafka-topics.sh --zookeeper kafka-zookeeper:2181 --describe --topic topic-create ")]),t._v("\nTopic: topic-create\tTopicId: iBO5jkiXSVuDFrlFowPUVQ\tPartitionCount: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("\tReplicationFactor: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\tConfigs: \n\tTopic: topic-create\tPartition: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\tLeader: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\tReplicas: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2,0")]),t._v("\tIsr: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2,0")]),t._v("\n\tTopic: topic-create\tPartition: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\tLeader: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\tReplicas: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0,1")]),t._v("\tIsr: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0,1")]),t._v("\n\tTopic: topic-create\tPartition: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\tLeader: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\tReplicas: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1,2")]),t._v("\tIsr: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1,2")]),t._v("\n\tTopic: topic-create\tPartition: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\tLeader: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\tReplicas: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2,1")]),t._v("\tIsr: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2,1")]),t._v("\nroot@101ed4754423:/opt/kafka_2.13-2.8.1/bin"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])]),a("p",[t._v("示例中的 "),a("code",[t._v("Topic")]),t._v("和 "),a("code",[t._v("Partition")]),t._v(" 分别表示主题名称和分区号。"),a("code",[t._v("PartitionCount")]),t._v(" 表示主题中分区的个数，"),a("code",[t._v("ReplicationFactor")]),t._v("\n表示副本因子，而 "),a("code",[t._v("Configs")]),t._v(" 表示创建或修改主题指定的参数配置。"),a("code",[t._v("Leader")]),t._v("表示分区的 "),a("code",[t._v("leader")]),t._v(" 副本所对应的 "),a("code",[t._v("brokerId")]),t._v(","),a("code",[t._v("Isr")]),t._v("\n表示分区的ISR集合"),a("code",[t._v("Replicas")]),t._v(" 表示分区的所有的副本分配情况，即 AR 集合，其中的数字都表示的是 "),a("code",[t._v("brokerld")]),t._v("。")]),t._v(" "),a("p",[a("code",[t._v("kafka-topics.sh")]),t._v("脚本中还提供了一个 "),a("code",[t._v("replica-assignment")]),t._v("\n参数来手动指定分区副本的分配方案。这种方式根据分区号的数值大小按照从小到大的顺序进行排列，分区与分区之间用逗号“，”隔开，分区内多个副本用冒号“:\n”隔开。并且在使用 "),a("code",[t._v("replica-assignment")]),t._v(" 参数创建主题时不需要原本必备的 "),a("code",[t._v("partitions")]),t._v(" 和 "),a("code",[t._v("replication-factor")]),t._v(" 这两个参数。")]),t._v(" "),a("p",[t._v("通过"),a("code",[t._v("replica-assignment")]),t._v("参数来创建一个与主题"),a("code",[t._v("topic-create")]),t._v("相同的分配方案的主题 "),a("code",[t._v("topic-create-same")]),t._v("\n和不同的分配方案的主题 "),a("code",[t._v("topic-create-diff")]),t._v("。")]),t._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("root@101ed4754423:/opt/kafka_2.13-2.8.1/bin"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ./kafka-topics.sh --zookeeper kafka-zookeeper:2181 --create --topic topic-create-same --replica-assignment 2:0,0:1,1:2,2:1")]),t._v("\nCreated topic topic-create-same.\nroot@101ed4754423:/opt/kafka_2.13-2.8.1/bin"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ")]),t._v("\nroot@101ed4754423:/opt/kafka_2.13-2.8.1/bin"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ./kafka-topics.sh --zookeeper kafka-zookeeper:2181 --describe  --topic topic-create-same")]),t._v("\nTopic: topic-create-same\tTopicId: Uza2jU5bQymPfChvfbstUg\tPartitionCount: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("\tReplicationFactor: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\tConfigs: \n\tTopic: topic-create-same\tPartition: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\tLeader: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\tReplicas: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2,0")]),t._v("\tIsr: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2,0")]),t._v("\n\tTopic: topic-create-same\tPartition: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\tLeader: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\tReplicas: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0,1")]),t._v("\tIsr: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0,1")]),t._v("\n\tTopic: topic-create-same\tPartition: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\tLeader: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\tReplicas: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1,2")]),t._v("\tIsr: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1,2")]),t._v("\n\tTopic: topic-create-same\tPartition: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\tLeader: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\tReplicas: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2,1")]),t._v("\tIsr: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2,1")]),t._v("\n\t\nroot@101ed4754423:/opt/kafka_2.13-2.8.1/bin"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ./kafka-topics.sh --zookeeper kafka-zookeeper:2181 --create --topic topic-create-diff --replica-assignment 1:2,2:0,0:1,1:0")]),t._v("\nCreated topic topic-create-diff.\nroot@101ed4754423:/opt/kafka_2.13-2.8.1/bin"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ./kafka-topics.sh --zookeeper kafka-zookeeper:2181 --describe  --topic topic-create-diff")]),t._v("\nTopic: topic-create-diff\tTopicId: caPBCVSDQQGfE3DNJZKfOQ\tPartitionCount: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("\tReplicationFactor: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\tConfigs: \n\tTopic: topic-create-diff\tPartition: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\tLeader: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\tReplicas: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1,2")]),t._v("\tIsr: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1,2")]),t._v("\n\tTopic: topic-create-diff\tPartition: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\tLeader: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\tReplicas: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2,0")]),t._v("\tIsr: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2,0")]),t._v("\n\tTopic: topic-create-diff\tPartition: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\tLeader: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\tReplicas: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0,1")]),t._v("\tIsr: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0,1")]),t._v("\n\tTopic: topic-create-diff\tPartition: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\tLeader: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\tReplicas: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1,0")]),t._v("\tIsr: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1,0")]),t._v("\nroot@101ed4754423:/opt/kafka_2.13-2.8.1/bin"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br")])]),a("blockquote",[a("p",[t._v("同一个分区内的副本不能有重复,比如指定了0:0,1:1这种,就会报出"),a("strong",[t._v("AdminCommandFailedException")]),t._v("异常。")])]),t._v(" "),a("p",[t._v("如果分区之间所指定的副本数不同,比如"),a("code",[t._v("0:1,0,1:0")]),t._v(" 这种,就会报出"),a("strong",[t._v("AdminOperationException")]),t._v("异常。类似 "),a("code",[t._v("0:1,,0:1,1:0")]),t._v("\n这种企图跳过一个分区的行为也是不被允许的。")]),t._v(" "),a("p",[t._v("在创建主题时我们还可以通过 "),a("code",[t._v("config")]),t._v("\n参数来设置所要创建主题的相关参数，通过这个参数可以覆盖原本的默认配置。在创建主题时可以同时设置多个参数。下面的示例使用了 "),a("code",[t._v("config")]),t._v("\n参数来创建一个主题 "),a("code",[t._v("topic-config")]),t._v("。")]),t._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("root@101ed4754423:/opt/kafka_2.13-2.8.1/bin"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ./kafka-topics.sh --zookeeper kafka-zookeeper:2181 --create --topic topic-config --replication-factor 1 --partitions 1 --config cleanup.policy=compact --config max.message.bytes=10000")]),t._v("\n\nCreated topic topic-config.\n\nroot@101ed4754423:/opt/kafka_2.13-2.8.1/bin"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ./kafka-topics.sh --zookeeper kafka-zookeeper:2181 --describe  --topic topic-config")]),t._v("\n\nTopic: topic-config\tTopicId: XOsn8iRBTYaRGR6ZRlr3Wg\tPartitionCount: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\tReplicationFactor: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\tConfigs: "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("cleanup.policy")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("compact,max.message.bytes"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10000")]),t._v("\n\tTopic: topic-config\tPartition: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\tLeader: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\tReplicas: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\tIsr: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n\nroot@101ed4754423:/opt/kafka_2.13-2.8.1/bin"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br")])]),a("p",[t._v("可以看到 Configs 一栏中包含了创建时所设置的参数。我们还可以通过 ZooKeeper 客户端查看所设置的参数，对应的ZooKeeper\n节点为"),a("code",[t._v("/config/topics/[topic]")]),t._v("。")]),t._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("zk: localhost:2181"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("CONNECTED"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" get /config/topics/topic-config\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"version"')]),t._v(":1,"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"config"')]),t._v(":"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"cleanup.policy"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"compact"')]),t._v(","),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"max.message.bytes"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"10000"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("zk: localhost:2181"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("CONNECTED"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("p",[t._v("创建主题时对于主题名称的命名方式也很有讲究。首先是不能与已经存在的主题同名，如果创建了同名的主题就会报错。")]),t._v(" "),a("blockquote",[a("p",[t._v("加了 "),a("code",[t._v("--if-not-exists")]),t._v(" 如果存在会忽略，不会报错。")])]),t._v(" "),a("p",[a("code",[t._v("kafka-topics.sh")]),t._v(" 脚本在创建主题时还会检测是否包含"),a("code",[t._v(".")]),t._v("或"),a("code",[t._v("_")]),t._v("字符。为什么要检测这两个字符呢?因为在\nKafka的内部做埋点时会根据主题的名称来命名"),a("code",[t._v("metrics")]),t._v("的名称，并且会将点号"),a("code",[t._v(".")]),t._v("改成下画线"),a("code",[t._v("_")]),t._v("。假设遇到一个名称为"),a("code",[t._v("topic.1_2")]),t._v("\n的主题，还有一个名称为"),a("code",[t._v("topic_1_2")]),t._v("的主题，那么最后的"),a("code",[t._v("metrics")]),t._v("的名称都会为"),a("code",[t._v("topic_1_2")]),t._v("，这样就发生了名称冲突。")]),t._v(" "),a("blockquote",[a("p",[t._v("主题的命名同样不推荐(虽然可以这样做)使用双下画线"),a("code",[t._v("__")]),t._v("开头，因为以双下画线开头的主题一般看作 Kafka\n的内部主题,比如"),a("code",[t._v("__consumer_offsets")]),t._v(" 和"),a("code",[t._v("__transaction_state")]),t._v("主题的名称必须由大小写字母、数字、点号"),a("code",[t._v(".")]),t._v("、连接线"),a("code",[t._v("-")]),t._v("、下画线"),a("code",[t._v("_")]),t._v("\n组成，不能为空不能只有点号"),a("code",[t._v(".")]),t._v("，也不能只有双点号"),a("code",[t._v("..")]),t._v("，且长度不能超过 249。")])]),t._v(" "),a("p",[t._v("Kafka 从 "),a("code",[t._v("0.10.x")]),t._v(" 版本开始支持指定 broker 的机架信息 (机架的名称)。如果指定了机架信息，则在分区副本分配时会尽可能地让分区副本分配到不同的植架上。指定机架信息是通过broker\n端参数 "),a("code",[t._v("broker.rack")]),t._v(" 来配置的，比如配置当前 broker 所在的机架为"),a("code",[t._v("RACK1")]),t._v(":")]),t._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("broker.rack")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("RACK1\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("如果一个集群中有部分 broker 指定了机架信息，并且其余的 broker 没有指定机架信息，那么在执行 "),a("code",[t._v("kafka-topics.sh")]),t._v(" 脚本创建主题时会报出的\n"),a("strong",[t._v("AdminOperationException")]),t._v(" 的异常。此时若要成功创建主题，要么将集群中的所有 broker\n都加上机架信息或都去掉机架信息，要么使用 "),a("code",[t._v("--disable-rack-aware")]),t._v(" 参数来忽略机架信息。如果集群中的所有 broker\n都有机架信息，那么也可以使用 "),a("code",[t._v("--disable-rack-aware")]),t._v(" 参数来忽略机架信息对分区副本的分配影响。")]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"_2-分区副本的分配"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-分区副本的分配"}},[t._v("#")]),t._v(" 2. 分区副本的分配")]),t._v(" "),a("p",[t._v("生产者的分区分配是指为每条消息指定其所要发往的分区，消费者的分区分配指定是为消费者指定其可以消费消息的分区，而这里说的分区分配是指为集群指定创建主题时的分区副本分配方案，即在哪个broker中创建哪些分区的副本。")]),t._v(" "),a("p",[t._v("使用"),a("code",[t._v("kafka-topics.sh")]),t._v("\n脚本创建主题时的内部分配逻辑按照机架信息划分为两种策略；未指定机架信息和指定机架信息。如果集群中所有的broker节点都没有配置 "),a("code",[t._v("broker.rack")]),t._v("\n参数，或者使用"),a("code",[t._v("disable-rack-aware")]),t._v("参数来创建主题，那么采用的就是未指定机架信息的分配策略，否则采用的就是指定机架信息的分配策略。")]),t._v(" "),a("p",[t._v("默认情况下，kafka使用的是基本的 "),a("code",[t._v("_Round Robin_")]),t._v(" 分配策略，它只考虑可用的 Broker，而不会明确考虑机架信息。然而，Kafka 提供了一种叫做\n"),a("strong",[t._v("Rack Awareness")]),t._v("（机架感知）的机制（也就是指定机架信息的分配策略），允许开发人员配置 Broker\n所在的机架信息，并在分配分区时考虑机架信息，以提高数据的可用性和容错性。这通常用于确保分区的副本尽量分布在不同的机架上，以应对机架级别的故障。在配置\n"),a("strong",[t._v("Rack Awareness")]),t._v("时，开发人员可以将不同的 Broker 分配到不同的机架，并指定每个 Broker 的机架信息。然后，Kafka\n在分配分区副本时，会考虑确保每个分区的副本尽量分布在不同的机架上，以增加系统的可用性。另外对于_Round Robin_策略：")]),t._v(" "),a("ol",[a("li",[t._v("Kafka 会首先根据集群中可用的 Broker 数量来确定要创建的分区数。通常，如果没有指定 "),a("code",[t._v("partitions")]),t._v(" 参数，它将使用默认值。")]),t._v(" "),a("li",[t._v("分区将被逐一分配给可用的 Broker，按照它们的编号顺序，从第一个 Broker 开始，然后依次分配给后续的 Broker。")]),t._v(" "),a("li",[t._v("一旦所有分区分配完毕，如果还有剩余的 Broker，分区分配将重新从第一个 Broker 开始，以循环方式继续分配。")])]),t._v(" "),a("p",[t._v("这意味着在默认情况下，Kafka 会将分区均匀地分配给可用的 Broker，以实现负载均衡。这种默认的分配策略有助于确保分区在集群中的分布是相对均匀的，以确保各个\nBroker 上的负载大致相等。")]),t._v(" "),a("blockquote",[a("p",[t._v("默认的分配逻辑可能不考虑各个 Broker 的硬件配置、网络带宽、负载等因素，因此在某些情况下，开发人员可能需要自定义分配策略来更好地满足特定的需求。")])]),t._v(" "),a("p",[t._v("另外默认情况下创建主题时总是从编号为0的分区依次轮询进行分配。")]),t._v(" "),a("p",[t._v("创建主题时，无论通过 "),a("code",[t._v("kafka-topics.sh")]),t._v(" 脚本还是通过其他方式实质上是在 ZooKeeper 中的"),a("code",[t._v("/brokers/topics")]),t._v("\n节点下建与该主题对应的子节点并写入分区副本分配方案，并且在"),a("code",[t._v("/config/topics/")]),t._v("\n节点下创建该主题对应的子节点并写入主题相关的配置信息(这个步骤可以省略不执行)。而 Kafka 创建主题的实质性动作是交由控制器异步去完成的。")]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"_3-查看主题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-查看主题"}},[t._v("#")]),t._v(" 3.查看主题")]),t._v(" "),a("p",[t._v("通过"),a("code",[t._v("list")]),t._v("指令可以查看当前所有可用的主题。")]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("/kafka"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("topics"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sh"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("zookeeper kafka"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("zookeeper"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2181")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("kafka"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("list\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("前面我们是通过"),a("code",[t._v("describe")]),t._v("指令来查看单个主题信息的，如果不使用"),a("code",[t._v("--topic")]),t._v("指定主题，则会展示出所有主题的详细信息。"),a("code",[t._v("--topic")]),t._v("\n还支持指定多个主题。")]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("/kafka"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("topics"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sh"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("zookeeper kafka"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("zookeeper"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2181")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("kafka"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("describe"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("topic topic"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("aaa"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("topic"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("bbb\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[a("code",[t._v("under-replicated-partitions")]),t._v(" 和"),a("code",[t._v("unavailable-partitions")]),t._v(" 参数都可以找出有问题的分区通过 "),a("code",[t._v("under-replicated-partitions")]),t._v("\n参数可以找出所有包含失效副本的分区。包含失效副本的分区可能正在进行同步操作，也有可能同步发生异常，此时分区的ISR集合小于AR\n集合。对于通过该参数查询到的分区要重点监控，因为这很可能意味着集群中的某个 broker 已经失效或同步效率降低等。")]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("/kafka"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("topics"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sh"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("zookeeper kafka"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("zookeeper"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2181")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("kafka"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("describe"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("topic topic"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("aaa"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("under"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("replicated"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("partitions\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("通过 "),a("code",[t._v("unavailable-partitions")]),t._v(" 参数可以查看主题中没有 leader 副本的分区，这些分区已经处于离线状态，对于外界的生产者和消费者来说处于不可用的状态。")]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("/kafka"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("topics"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sh"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("zookeeper kafka"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("zookeeper"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2181")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("kafka"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("describe"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("topic topic"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("aaa unavailable"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("partitions\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("hr"),t._v(" "),a("h2",{attrs:{id:"_4-修改主题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-修改主题"}},[t._v("#")]),t._v(" 4.修改主题")]),t._v(" "),a("p",[t._v("当一个主题被创建之后，依然允许我们对其做一定的修改，比如修改分区个数，修改配置等，这个修改的功能就是由"),a("code",[t._v("kafka-topics.sh")]),t._v("\n脚本中的"),a("code",[t._v("alter")]),t._v("指令提供的。")]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("/kafka"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("topics"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sh"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("zookeeper kafka"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("zookeeper"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2181")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("kafka"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("alter"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("topic topic"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("config"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("partitions "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("当主题中的消息包含 key 时 (即 key 不为 null)，根据 key 计算分区的行为就会受到影响。当 topic-config 的分区数为 1 时，不管消息的\nkey 为何值，消息都会发往这一个分区;当分区数增加到 3 时，就会根据消息的 key 来计算分区号，原本发往分区 0 的消息现在有可能会发往分区\n1 或分区 2。如此还会影响既定消息的顺序，所以在增加分区数时一定要三思而后行。对于基于 key 计算的主题而言，建议在一开始就设置好分区数量避免以后对其进行调整。")]),t._v(" "),a("p",[t._v("目前 Kafka 只支持增加分区数而不支持减少分区数。比如我们再将主题 "),a("code",[t._v("topic-config")]),t._v(" 的分区数修改为 1，就会报出 *\n"),a("em",[t._v("InvalidPartitionException")]),t._v("* 的异常。为什么不支持减少分区？")]),t._v(" "),a("p",[t._v("按照 Kafka 现有的代码逻辑，此功能完全可以实现，不过也会使代码的复杂度急剧增大。实现此功能需要考虑的因素很多，比如删除的分区中的消息该如何处理?\n如果随着分区一起消失则消息的可靠性得不到保障;如果需要保留则又需要考虑如何保留。直接存储到现有分区的尾部，消息的时间戳就不会递增，如此对于\nSpark、Flink 这类需要消息时间戳(事件时间)的组件将会受到影响;\n如果分散插入现有的分区，那么在消息量很大的时候，内部的数据复制会占用很大的资源，而且在复制期间，此主题的可用性又如何得到保障?与此同时，顺序性问题.事务性问题，以及分区和副本的状态机切换问题都是不得不面对的。反观这个功能的收益点却是很低的，如果真的需要实现此类功能，则完全可以重新创建一个分区教较小的主题，然后将现有主题中的消息按照既定的逻辑复制过去即可。")]),t._v(" "),a("p",[t._v("除了修改分区数，我们还可以使用 "),a("code",[t._v("kafka-topics.sh")]),t._v(" 脚本的 "),a("code",[t._v("alter")]),t._v("\n指令来变更主题的配置。在创建主题的时候我们可以通过 "),a("code",[t._v("config")]),t._v("\n参数来设置所要创建主题的相关参数，通过这个参数可以覆盖原本的默认配置。在创建完主题之后，我们还可以通过 "),a("code",[t._v("alter")]),t._v("\n指令配合 "),a("code",[t._v("config")]),t._v(" 参数增加或修改一些配置以覆盖它们配置原有的值。")]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("/kafka"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("topics"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sh"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("zookeeper kafka"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("zookeeper"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2181")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("kafka"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("alter"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("topic topic"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("config"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("config max"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("message"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("bytes"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20000")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("我们可以通过 "),a("code",[t._v("delete-config")]),t._v(" 参数来删除之前覆盖的配置，使其恢复原有的默认值。下面的示例将主题 "),a("code",[t._v("topic-config")]),t._v("\n中所有修改过的配置都删除:")]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("/kafka"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("topics"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sh"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("zookeeper kafka"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("zookeeper"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2181")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("kafka"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("alter"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("topic topic"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("config"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("delete"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("config segment"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("bytes\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("注意到在变更 (增、删、改)配置的操作执行之后都会提示一段告警信息，指明了使用"),a("code",[t._v("kafka-topics.sh")]),t._v("脚本的 "),a("code",[t._v("alter")]),t._v("\n指令来变更主题配置的功能已经过时 ("),a("code",[t._v("deprecated")]),t._v(")，将在未来的版本中删除，并且推荐使用 "),a("code",[t._v("kafka-configs.sh")]),t._v(" 脚本来实现相关功能。")]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"_5-配置管理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-配置管理"}},[t._v("#")]),t._v(" 5.配置管理")]),t._v(" "),a("p",[a("code",[t._v("kafka-configs.sh")]),t._v("\n脚本是专门用来对配置进行操作的，这里的操作是指在运行状态下修改原有的配置，如此可以达到动态变更的目的。"),a("code",[t._v("kafka-configs.sh")]),t._v("\n脚本包含变更配置 "),a("code",[t._v("alter")]),t._v(" 和查看配置 "),a("code",[t._v("describe")]),t._v(" 这两种指令类型。同使用 "),a("code",[t._v("kafka-topics.sh")]),t._v("\n脚本变更配置的原则一样，增、删、改的行为都可以看作变更操作，不过 "),a("code",[t._v("kafka-configs.sh")]),t._v(" 脚本不仅可以支持操作主题相关的配置，还可以支持操作\nbroker、用户和客户端这3个类型的配置。")]),t._v(" "),a("p",[a("code",[t._v("kafka-configs.sh")]),t._v(" 脚本使用"),a("code",[t._v("entity-type")]),t._v("参数来指定操作配置的类型，并且使用"),a("code",[t._v("entity-name")]),t._v("\n参数来指定操作配置的名称。比如查看主题 "),a("code",[t._v("topic-config")]),t._v(" 的配置可以按如下方式执行:")]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("/kafka"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("configs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sh"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("zookeeper kafka"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("zookeeper"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2181")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("kafka"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("describe"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("entity"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("typetopics"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("entity"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("name topic"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("config\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[a("code",[t._v("--describe")]),t._v("指定了查看配置的指令动作,"),a("code",[t._v("--entity-type")]),t._v("指定了查看配置的实体类"),a("code",[t._v("--entity-name")]),t._v("\n指定了查看配置的实体名称。"),a("code",[t._v("entity-type")]),t._v(" 只可以配置 4个值: "),a("code",[t._v("topics 、brokers 、clients 和users")]),t._v(","),a("code",[t._v("entity-type")]),t._v("\n与"),a("code",[t._v("entity-name")]),t._v(" 的对应关系如下。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("entity-type 的释义")]),t._v(" "),a("th",[t._v("entity-name 的释义")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("主题类型的配置，取值为 topics")]),t._v(" "),a("td",[t._v("指定主题的名称")])]),t._v(" "),a("tr",[a("td",[t._v("broker 类型的配置，取值为 brokers")]),t._v(" "),a("td",[t._v("指定brokerId的值")])]),t._v(" "),a("tr",[a("td",[t._v("客户端类型的配置，取值为 clients")]),t._v(" "),a("td",[t._v("指定clientId的值")])]),t._v(" "),a("tr",[a("td",[t._v("用户类型的配置，取值为 users")]),t._v(" "),a("td",[t._v("指定用户名")])])])]),t._v(" "),a("p",[t._v("使用 "),a("code",[t._v("alter")]),t._v(" 指令变更配置时，需要配合 "),a("code",[t._v("add-config")]),t._v("和 "),a("code",[t._v("delete-config")]),t._v(" 这两个参数起使用。"),a("code",[t._v("add-config")]),t._v("\n参数用来实现配置的增、改，即覆盖原有的配置;"),a("code",[t._v("delete-config")]),t._v("\n参数用来实现配置的删，即删除被覆盖的配置以恢复默认值。下面的示例演示了 "),a("code",[t._v("add-config")]),t._v(" 参数的用法，覆盖了主题 "),a("code",[t._v("topic-config")]),t._v("\n的两个配置"),a("code",[t._v("cleanup.policy")]),t._v("和"),a("code",[t._v("max.message.bytes")]),t._v("(示例执行之前主题 "),a("code",[t._v("topic-config")]),t._v(" 无任何被覆盖的配置):")]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("/kafka"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("configs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sh"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("zookeeper kafka"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("zookeeper"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2181")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("kafka"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("alter"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("entity"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("type topics"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("entity"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("name topic"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("config"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("add"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("configcleanup"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("policy"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("compact"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("max"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("message"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("bytes"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10000")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("/kafka"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("configs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sh"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("zookeeper kafka"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("zookeeper"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2181")]),t._v("kafka"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("describe"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("entity"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("type topics"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("entity"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("name topic"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("config\n\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("/kafka"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("topics"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sh"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("zookeeper kafka"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("zookeeper"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2181")]),t._v("kafka"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("describe"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("topic topic"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("config"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("topics"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("with")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("overrides\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("p",[t._v("上面示例中还使用了两种方式来查看主题 "),a("code",[t._v("topic-config")]),t._v(" 中配置信息，注意比较这两者之间的差别。")]),t._v(" "),a("p",[t._v("使用"),a("code",[t._v("delete-config")]),t._v("参数删除配置时，同"),a("code",[t._v("add-config")]),t._v("参数一样支持多个配置的操作，多个配置之间用逗号"),a("code",[t._v(",")]),t._v("\n分隔，下面的示例中演示了如何删除上面刚刚增加的主题配置:")]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("/kafka"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("configs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sh"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("zookeeper kafka"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("zookeeper"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2181")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("kafka"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("alter"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("entity"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("type topics"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("entity"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("name topic"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("config"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("delete"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("configcleanup"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("policy"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("max"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("message"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("bytes\n\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("/kafka"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("configs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sh"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("zookeeper kafka"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("zookeeper"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2181")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("kafka"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("describe"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("entity"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("type topics"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("entity"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("name topic"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("config\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("hr"),t._v(" "),a("h2",{attrs:{id:"_6-主题端参数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-主题端参数"}},[t._v("#")]),t._v(" 6.主题端参数")]),t._v(" "),a("p",[t._v("与主题相关的所有配置参数在 broker 层面都有对应参数，比如主题端参数 "),a("code",[t._v("cleanup.policy")]),t._v(" 对应 broker\n层面的 "),a("code",[t._v("log.cleanup.policy")]),t._v("。如果没有修改过主题的任何配置参数那么就会使用 broker\n端的对应参数作为其默认值。可以在创建主题时覆盖相应参数的默认值.也可以在创建完主题之后变更相应参数的默认值。比如在创建主题的时候没有指定"),a("code",[t._v("cleanup.policy")]),t._v("\n参数的值，那么就使用 "),a("code",[t._v("log.cleanup.policy")]),t._v(" 参数所配置的值作为"),a("code",[t._v("cleanup.policy")]),t._v("的值。")]),t._v(" "),a("p",[t._v("下表列出了主题端参数与 broker 端参数的对照关系。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("主题端参数")]),t._v(" "),a("th",[t._v("作用")]),t._v(" "),a("th",[t._v("broker端参数")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("cleanup.policy")]),t._v(" "),a("td",[t._v("日志压缩策略。默认值为 delete，还可以配置为 compact。")]),t._v(" "),a("td",[t._v("log.cleanup.policy")])]),t._v(" "),a("tr",[a("td",[t._v("compression.type")]),t._v(" "),a("td",[t._v("消息的压缩类型。默认值为 producer，表示保留生产者中所使用的原始压缩类型。还可以配置为 uncompressed、snappy、Iz4、gzip")]),t._v(" "),a("td",[t._v("compression.type")])]),t._v(" "),a("tr",[a("td",[t._v("delete.retention.ms")]),t._v(" "),a("td",[t._v("被标识为删除的数据能够保留多久。默认值为 86400000，即1天")]),t._v(" "),a("td",[t._v("log.cleaner.delete.retention.ms")])]),t._v(" "),a("tr",[a("td",[t._v("file.delete.delay.ms")]),t._v(" "),a("td",[t._v("清理文件之前可以等待多长时间，默认值为60000，即1分钟")]),t._v(" "),a("td",[t._v("log.segment.delete.delay.ms")])]),t._v(" "),a("tr",[a("td",[t._v("flush. messages")]),t._v(" "),a("td",[t._v("需要收集多少消息才会将它们强制刷新到磁盘，默认值为 Long.MAX VALUE，即让操作系统来决定。建议不要修改此参数的默认值")]),t._v(" "),a("td",[t._v("log.flush.interval.messages")])]),t._v(" "),a("tr",[a("td",[t._v("flush.ms")]),t._v(" "),a("td",[t._v("需要等待多久才会将消息强制刷新到磁盘，默认值为 Long.MAX VALUE，即让操作系统来决定。建议不要修改此参数的默认值")]),t._v(" "),a("td",[t._v("log.flush.interval.ms")])]),t._v(" "),a("tr",[a("td",[t._v("follower.replication.throttled.replicas")]),t._v(" "),a("td",[t._v("用来配置被限制速率的主题所对应的follower 副本列表")]),t._v(" "),a("td",[t._v("follower.replication.throttled.replicas")])]),t._v(" "),a("tr",[a("td",[t._v("index.interval.bytes")]),t._v(" "),a("td",[t._v("用来控制添加索引项的频率。每超过这个参数所设置的消息字节数时就可以添加一个新的索引项，默认值为 4096")]),t._v(" "),a("td",[t._v("log.index.interval.bytes")])]),t._v(" "),a("tr",[a("td",[t._v("leader.replication.throttled.replicas")]),t._v(" "),a("td",[t._v("用来配置被限制速率的主题所对应的 leader副本列表")]),t._v(" "),a("td",[t._v("leader.replication.throttled.replicas")])]),t._v(" "),a("tr",[a("td",[t._v("max.message.bytes")]),t._v(" "),a("td",[t._v("消息的最大字节数，默认值为 1000012")]),t._v(" "),a("td",[t._v("message.max.bytes")])]),t._v(" "),a("tr",[a("td",[t._v("message.format. version")]),t._v(" "),a("td",[t._v("消息格式的版本，默认值为 2.0-IV1")]),t._v(" "),a("td",[t._v("log. message. format.version")])]),t._v(" "),a("tr",[a("td",[t._v("message.timestamp.difference.max.ms")]),t._v(" "),a("td",[t._v("消息中自带的时间戳与 broker 收到消息时的时间戳之间最大的差值，默认值为Long.MAX VALUE。此参数只有在meesage.timestamp.type 参数设置为 CreateTime 时才有效")]),t._v(" "),a("td",[t._v("log.message.timestamp.difference.max.ms")])]),t._v(" "),a("tr",[a("td",[t._v("message.timestamp.type")]),t._v(" "),a("td",[t._v("消息的时间戳类型。默认值为 CreateTime,还可以设置为 LogAppendTime")]),t._v(" "),a("td",[t._v("log.message.timestamp.type")])]),t._v(" "),a("tr",[a("td",[t._v("min.cleanable.dirty.ratio")]),t._v(" "),a("td",[t._v("日志清理时的最小污浊率，默认值为 0.5")]),t._v(" "),a("td",[t._v("log.cleaner.min.cleanable.ratio")])]),t._v(" "),a("tr",[a("td",[t._v("min.compaction.lag.ms")]),t._v(" "),a("td",[t._v("日志再被清理前的最小保留时间，默认值为0")]),t._v(" "),a("td",[t._v("log.cleaner.min.compaction.lag.ms")])]),t._v(" "),a("tr",[a("td",[t._v("min.insync.replicas")]),t._v(" "),a("td",[t._v("分区 ISR 集合中至少要有多少个副本，默认值为 1")]),t._v(" "),a("td",[t._v("min.insync.replicas")])]),t._v(" "),a("tr",[a("td",[t._v("preallocate")]),t._v(" "),a("td",[t._v("在创建日志分段的时候是否要预分配空间,默认值为 false")]),t._v(" "),a("td",[t._v("log.preallocate")])]),t._v(" "),a("tr",[a("td",[t._v("retention.bytes")]),t._v(" "),a("td",[t._v("分区中所能保留的消息总量，默认值为-1,即没有限制")]),t._v(" "),a("td",[t._v("log.retention.bytes")])]),t._v(" "),a("tr",[a("td",[t._v("retention.ms")]),t._v(" "),a("td",[t._v("使用 delete 的日志清理策略时消息能够保留多长时间，默认值为 604800000，即 7 天。如果设置为-1，则表示没有限制")]),t._v(" "),a("td",[t._v("log.retention.ms")])]),t._v(" "),a("tr",[a("td",[t._v("segment.bytes")]),t._v(" "),a("td",[t._v("日志分段的最大值，默认值为 1073741824,即 1GB")]),t._v(" "),a("td",[t._v("log.segment.bytes")])]),t._v(" "),a("tr",[a("td",[t._v("segment.index.bytes")]),t._v(" "),a("td",[t._v("日志分段索引的最大值，默认值为 10485760,即 10MB")]),t._v(" "),a("td",[t._v("log.index.size.max.bytes")])]),t._v(" "),a("tr",[a("td",[t._v("segment.jitter.ms")]),t._v(" "),a("td",[t._v("滚动日志分段时，在 segment.ms 的基础之上增加的随机数，默认为 0")]),t._v(" "),a("td",[t._v("log.roll.jitter.ms")])]),t._v(" "),a("tr",[a("td",[t._v("segment.ms")]),t._v(" "),a("td",[t._v("最长多久滚动一次日志分段，默认值为604800000，即 7 天")]),t._v(" "),a("td",[t._v("log.roll.ms")])]),t._v(" "),a("tr",[a("td",[t._v("unclean.leader.election.enable")]),t._v(" "),a("td",[t._v("是否可以从非 ISR 集合中选举 leader 副本默认值为 false，如果设置为 true，则可能造成数据丢失")]),t._v(" "),a("td",[t._v("unclean.leader.election.enable")])])])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"_7-删除主题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-删除主题"}},[t._v("#")]),t._v(" 7.删除主题")]),t._v(" "),a("p",[t._v("如果确定不再使用一个主题，那么最好的方式是将其删除，这样可以释放一些资源，比如磁盘、文件句柄等。"),a("code",[t._v("kafka-topics.sh")]),t._v("\n脚本中的 "),a("code",[t._v("delete")]),t._v(" 指令就可以用来删除主题，比如删除一个主题 "),a("code",[t._v("topic-delete")]),t._v(":")]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("/kafka"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("topics"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sh"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("zookeeper kafka"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("zookeeper"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2181")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("kafka"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("delete"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("topic topic"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("delete\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("可以看到在执行完删除命令之后会有相关的提示信息，这个提示信息和 broker 端配置参数"),a("code",[t._v("delete.topic,enable")]),t._v("\n有关。必须将 "),a("code",[t._v("delete.topic.enable")]),t._v(" 参数配置为 true 才能够除主题，这个参数的默认值就是 true，如果配置为\nfalse，那么删除主题的操作将会被忽略。在实际生产环境中，建议将这个参数的值设置为 true。")]),t._v(" "),a("p",[t._v("如果要删除的主题是 Kafka 的内部主题，那么删除时就会报错。截至 "),a("code",[t._v("Kaka 2.0.0")]),t._v("，Kafka的内部一共包含 2\n个主题，分别为"),a("code",[t._v("__consumer__offsets 和__transaction__state")]),t._v("。下面的示例中尝试删除内部主题"),a("code",[t._v("__consumer__offsets")]),t._v(":")]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("/kafka"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("topics"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sh"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("zookeeper kafka"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("zookeeper"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2181")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("kafka"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("delete"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("topic __consumer_offsets\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("尝试删除一个不存在的主题也会报错。这里同 "),a("code",[t._v("alter")]),t._v(" 指令一样，也可以通过 "),a("code",[t._v("if-exists")]),t._v(" 参数来忽略异常。")]),t._v(" "),a("p",[t._v("使用 "),a("code",[t._v("kafka-topics.sh")]),t._v(" 脚本删除主题的行为本质上只是在 ZooKeeper 中的"),a("code",[t._v("/admin/delete/topics")]),t._v("\n路径下创建一个与待删除主题同名的节点，以此标记该主题为待删除的状态。与创建主题相同的是，真正删除主题的动作也是由Kafka\n的控制器负责完成的。")]),t._v(" "),a("p",[t._v("删除主题是一个不可逆的操作，一旦主题被删除，与其相关的所有消息数据会被全部删除。")]),t._v(" "),a("p",[t._v("下面列出了"),a("code",[t._v("kafka-topics.sh")]),t._v("脚本中的参数。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("参数名称")]),t._v(" "),a("th",[t._v("作用")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("alter")]),t._v(" "),a("td",[t._v("用于修改主题，包括分区数及主题的配置")])]),t._v(" "),a("tr",[a("td",[t._v("config<键值对>")]),t._v(" "),a("td",[t._v("创建或修改主题时，用于设置主题级别的参数")])]),t._v(" "),a("tr",[a("td",[t._v("create")]),t._v(" "),a("td",[t._v("创建主题")])]),t._v(" "),a("tr",[a("td",[t._v("delete")]),t._v(" "),a("td",[t._v("删除主题")])]),t._v(" "),a("tr",[a("td",[t._v("delete-config<配置名称>")]),t._v(" "),a("td",[t._v("删除主题级别被覆盖的配置")])]),t._v(" "),a("tr",[a("td",[t._v("describe")]),t._v(" "),a("td",[t._v("查看主题的详细信息")])]),t._v(" "),a("tr",[a("td",[t._v("disable-rack-aware")]),t._v(" "),a("td",[t._v("创建主题时不考虑机架信息")])]),t._v(" "),a("tr",[a("td",[t._v("help")]),t._v(" "),a("td",[t._v("打印帮助信息")])]),t._v(" "),a("tr",[a("td",[t._v("if-exists")]),t._v(" "),a("td",[t._v("修改或删除主题时使用，只有当主题存在时才会执行动作")])]),t._v(" "),a("tr",[a("td",[t._v("if-not-exists")]),t._v(" "),a("td",[t._v("创建主题时使用，只有主题不存在时才会执行动作")])]),t._v(" "),a("tr",[a("td",[t._v("list")]),t._v(" "),a("td",[t._v("列出所有可用的主题")])]),t._v(" "),a("tr",[a("td",[t._v("partitions <分区数>")]),t._v(" "),a("td",[t._v("创建主题或增加分区时指定分区数")])]),t._v(" "),a("tr",[a("td",[t._v("replica-assignment<分配方案>")]),t._v(" "),a("td",[t._v("手工指定分区副本分配方案")])]),t._v(" "),a("tr",[a("td",[t._v("replication-factor<副本数>")]),t._v(" "),a("td",[t._v("创建主题时指定副本因子")])]),t._v(" "),a("tr",[a("td",[t._v("topic <主题名称>")]),t._v(" "),a("td",[t._v("指定主题名称")])]),t._v(" "),a("tr",[a("td",[t._v("topics-with-overrides")]),t._v(" "),a("td",[t._v("使用 describe 查看主题信息时，只展示包含覆盖配置的主题")])]),t._v(" "),a("tr",[a("td",[t._v("unavailable-partitions")]),t._v(" "),a("td",[t._v("使用 describe 查看主题信息时，只展示包含没有 leader 副本的")])]),t._v(" "),a("tr",[a("td",[t._v("分区")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("under-replicated-partitions")]),t._v(" "),a("td",[t._v("使用 describe 查看主题信息时，只展示包含失效副本的分区")])]),t._v(" "),a("tr",[a("td",[t._v("zookeeper")]),t._v(" "),a("td",[t._v("指定连接的 ZooKeeper 地址信息 (必填项)")])])])]),t._v(" "),a("hr")])}),[],!1,null,null,null);a.default=r.exports}}]);